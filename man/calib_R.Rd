% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate_IC.R
\name{calib_R}
\alias{calib_R}
\title{Calibration of Isotope Ratios}
\usage{
calib_R(
  x,
  reference,
  isotope,
  type = "composition",
  input = "R",
  output = "F",
  y = NULL
)
}
\arguments{
\item{x}{A numeric value or vector.}

\item{reference}{A character or numeric value or vector.}

\item{isotope}{A character for the name of the isotope (e.g. \code{"13C"}).}

\item{type}{Type of conversion, isotope composition or enrichment.}

\item{input}{The type of input value, R, F, and delta.}

\item{output}{Desired output value, R, F, and delta.}

\item{y}{A numeric value or vector of the product when calculating enrichment
factors, following the convention; x = R(product)/ y = R(substrate). Both x
and y should have the same notation, either R, F or delta, as supplied to
the argument input.}
}
\value{
A numeric value or vector.
}
\description{
\code{calib_R} function to convert isotope values back-and-forth between R,
delta, and more.
}
\details{
It is convention to publish isotope data as delta transformed values, where
the R is compared relative to a known standard. These values are reported on
a per mill scale. However IC calculations more commonly use ratios (R) or
fractional abundances (F). This function provides an easy way to calculate
fractionations and enrichment factors (alpha and epsilon).
}
\examples{
# R value of 0.0111 to delta on VPDB scale
calib_R(0.0111, reference = 0.011237, type = "composition", input = "R",
        output = "delta")
# or
calib_R(0.0111, reference = "VPDB", isotope = "13C",
        type = "composition", input = "R", output = "delta")

# Fractional abundance for a given R
calib_R(0.0111, reference = 0.011237, type = "composition",
        input = "R", output = "F")

# Alpha enrichment factors can also be calculated based on two delta/R/F
# values, where the second value can be supplied as argument y (i.e.,
# the product of a reaction)
calib_R(-25, reference = "VPDB", isotope = "13C",
        type = "enrichment", input = "delta", output = "alpha", y = -105)

}
