% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_IC.R
\name{plot_diag_R}
\alias{plot_diag_R}
\title{Plotting diagnostics}
\usage{
plot_diag_R(
  df,
  args = expr_R(NULL),
  ...,
  plot_title,
  type = "static",
  rep = "1"
)
}
\arguments{
\item{df}{A tibble containing processed ion count data.}

\item{args}{A list of quosures pertaining to the variables required for a
call to stat_R. The function expr_R can be used to simplify setting this
argument.}

\item{...}{Variables for grouping.}

\item{method}{Character string for the type of diagnostics. Currently only
"standard" is supported, which pertains to the default Cameca software
setting.}
}
\value{
A t\code{\link[ggplot2:ggplot]{ggplot}}
}
\description{
\code{plot_RDiag} function for propagation of uncertainty for single ions
}
\details{
The \code{plot_RDiag} visualises the diagnostics
}
\examples{
# Use point_example() to access the examples bundled with this package

# raw data containing 13C and 12C counts on carbonate
tb.rw <- read_IC(point_example("2018-01-19-GLENDON"))

# Processing raw ion count data
tb.pr <- cor_IC(tb.rw, N.rw, t.rw, det_type.mt)

# expression for R_stat()
expr_R_stat <- expr_R(Xt = "Xt.pr",
                      N = "N.pr",
                      species = "species.nm",
                      ion1 = "13C",
                      ion2 = "12C"
                      )

# diagnostics ion count data for isotope ratios
tb.aug <- diag_R(tb.pr,
                 method = "CooksD",
                 args = expr_R_stat,
                 reps = 2,
                 file.nm
                 )

# plotting Cook's D diagnostics
plot_diag_R(tb.aug, args = expr_R_stat, file.nm)

}
