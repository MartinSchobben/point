[{"path":"https://martinschobben.github.io/point/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://martinschobben.github.io/point/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Martin Schobben  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. point Copyright (C) 2020 Martin Schobben This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"diagnostics-for-ion-count-data","dir":"Articles","previous_headings":"","what":"Diagnostics for Ion Count Data","title":"IC-diagnostics","text":"random nature secondary ions emitted sample described Poisson statistics, can used predict precision SIMS measurements ideal circumstances (e.g., predicted standard error can deduced total counts secondary ions). However, besides fundamental source imprecision, real SIMS measurements additionally affected factors sample heterogeneity, instrument instability, development geometry sputter pit, sample charging. Although biases can avoided proper instrument tuning sample documentation (e.g. T/SEM characterise textural properties rock sample) prior SIMS measurement, factors instrument instability sample heterogeneity can never fully eliminated. vignette, diagnostic tools showcased can help evaluate potential impact factors precision ion count data. following packages used examples follow.","code":"library(point) library(purrr) # functional programming library(dplyr) # manipulating data library(ggplot2) # graphics"},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"nomenclature","dir":"Articles","previous_headings":"1 Diagnostics for Ion Count Data","what":"Nomenclature","title":"IC-diagnostics","text":"Sample: sample true population Analytical substrate: physical sample measured SIMS analysis Event: single event ion hitting detector Measurement: single count cycle \\(N_i\\) Analysis: \\(n\\)-series measurements \\(N_{()} = M_j\\) Study: \\(m\\)-series analyses \\(M_{(j)}\\), constituting different spots analytical substrate","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"basic-functionality","dir":"Articles","previous_headings":"1 Diagnostics for Ion Count Data","what":"Basic functionality","title":"IC-diagnostics","text":"function diag_R() designed flexible wrapper isotope count diagnostics. Non-isotope pairs supported well outcome necessarily meaningful due variation caused ionization efficiency differences among elements, check vignette IC-process solutions. basic functionality, diag_R() requires following arguments: .IC, tibble containing processed ion count data (ideally, following routine point work-flow), arguments .ion1 .ion2 link rare isotope common isotope, respectively (character strings). dots ... used define grouping variable e.g. identify individual analysis sets analyses. argument .method enables selection diagnostic methods, outlined vignette. range arguments dictate features returned statistics plotting outcome (ggplot). Check ?diag_R() options. following example grouping structure data frame defined file-names block numbers, recreates default CamecaTM software diagnostics. output consist tibble containing single ion count statistics ion isotope ratio statistics. addition, specific diagnostics (selected .method =  \"Cameca\") appended tibble. procedure repeated two times (.reps = 2) .output set \"diagnostic\" get augmented summary statistics \\(R\\) following CamecaTM output.","code":"# Use point_example() to access the examples bundled with this package  # Carry-out the routine point work-flow # Raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE)  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # CAMECA style diagnostics tb_dia <- diag_R(tb_pr, \"13C\", \"12C\", file.nm, bl.nm, .method = \"Cameca\",                   .reps = 2,  .output = \"diagnostic\")"},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"isotope-ratios-a-special-case","dir":"Articles","previous_headings":"","what":"Isotope ratios: A special case","title":"IC-diagnostics","text":"Isotopes element --less ionization efficiency (Fitzsimons, Harte, Clark 2000). thus follows, isotopically homogeneous analytical substrate count rates two isotope element dependent . can deduced large deviations count rate ratios isotope system consecutive measurements indicate potential discrepancy (e.g., sample heterogeneity instrument instability). unique property enables detection situations analysed substrate contains isotopic heterogeneity smaller scale beam size, machine instability causes discrepancy count rates detectors.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"count-block-based-diagnostics-camecatm","dir":"Articles","previous_headings":"2 Isotope ratios: A special case","what":"Count block-based diagnostics (CamecaTM)","title":"IC-diagnostics","text":"default method account discrepancies, incorporated CamecaTM software, entails block-wise (blocks represent sub-units complete analysis) check variability. values fall outside pre-defined range variance (e.g. two standard deviations, referred \\(\\sigma\\) CamecaTM software), measurement rejected (\\(N\\_rej\\) excerpt Cameca output files; Fig. 2.1). Figure 2.1: excerpt Cameca stat-file count block based 2\\(\\sigma\\)-rejection associated blockwise statistics Table 2.1: Blockwise statistics augmented dataset (replication Fig. 2.1 pointpackage).","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"regression-based-diagnostics","dir":"Articles","previous_headings":"2 Isotope ratios: A special case","what":"Regression-based diagnostics","title":"IC-diagnostics","text":"solution provided CamecaTM software seems straightforward effective, just compare \\(R\\) values individual measurements \\(n\\)-series (\\(N_{()}\\)), check whether significant deviations points analysis. However, situation complex , illustrated following examples. examples, isotope count rates simulated (simu_IC provide along package) three hypothetical types materials (Fig. 2.2). “ideal” substrate completely homogeneous isotopic composition substrate “symmetric gradient”, isotope gradient spanning whole depth covered analysis substrate “asymmetric gradient”, sudden offset isotope composition specific depth two simulations heterogeneous isotope composition total span isotope variability set 60‰. linear trend superimposed count rates isotope species, inherent phenomenon SIMS analysis. relates changes ionization potential resulting sputter pit development charge build-(see vignette: IC-process). systematic bias afflicts isotope species similar degree thereby leaving \\(R\\) unaltered (see Fitzsimons, Harte, Clark 2000). Figure 2.2: Histograms comparing input output \\(R\\) values simulations ideal isotopically homogenous material, gradual gradient \\(R\\) (symmetric gradient), sudden shift \\(R\\) (asymmetric gradient). Figure 2.2 evident real variation \\(R\\) (input R; black red lines) indistinguishable viewing derived distribution ion count ratios (output R; histogram). effect related relative large random bias induced ionization substrate. , even large variations isotopic composition, confidently said whether measured \\(R\\) representative analysed site, underlying data structure skewed one, , isotopically distinguishable components comprising pooled \\(R\\) value. effect , furthermore, hardly observable precision data, \\(\\epsilon_{\\bar{R}}\\) simulation referred “asymmetric” 1.01, 0.97, 0.97‰, whereas “ideal” simulation marginally better precision 0.8, 0.79, 0.8‰. previous examples, becomes apparent heterogeneous substrates cause minimal deviation internal precision. Hence, lot hidden variation nominal SIMS isotope analyses can go undetected. , clearly, different approach must adopted identify isotopically highly variable substrates.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"linear-relationship-of-isotope-counts","dir":"Articles","previous_headings":"2 Isotope ratios: A special case > 2.2 Regression-based diagnostics","what":"Linear relationship of isotope counts","title":"IC-diagnostics","text":"“ideal” isotopically homogeneous substrate count rates two isotope element dependent (Fitzsimons, Harte, Clark 2000). Thus, even though ionization efficiency might vary within single analysis, count rate isotope species \\(b\\) can deduced count rate isotope species \\(\\) linear combination isotope ratio \\(R\\): \\[\\begin{equation} \\hat{X}_i^b = \\hat{R}X_i^+  \\hat{e}_i \\qquad \\text{} \\quad  e_i \\sim N \\left(0,\\sigma^2 \\right) \\tag{2.1} \\end{equation}\\] ideal linear count rate relationship, variation \\(R\\) caused random nature secondary ion generation, follows Poisson distribution (see vignette IC-precision). Instead using Ordinary Least Squares (OLS) obtain estimates regression coefficients, ratio mean ion count rates, \\(\\bar{R}\\), can used single coefficient function (ratio estimation). Although residuals (\\(e_i\\)) linear model unobserved, can approximated, follows: \\[\\begin{equation}  \\hat{e}_i =  X_i^b - \\hat{R}X_i^\\text{.} \\tag{2.2} \\end{equation}\\] component \\(\\hat{e}_i\\) gives measure fit model (performance \"ideal linear model) sampled data. known residual analysis regression diagnostics; see example (Fox Weisberg 2018). Residual analysis yield estimates data points unduly influenced coefficient \\(\\hat{R}\\) Equation (2.1). Outliers detected linear regression can therefore described observation response variable (isotope species; \\(X_i^b\\)) conditionally unusual regarding independent variable (isotope species; \\(X_i^\\)). demonstrate can use diag_R() simulated data according previous specifications (“ideal”, “symmetric”, “asymmetric” isotope variance), supply nominal arguments .IC, .ion1, .ion2, ... define ion count data, isotope system analysed, well grouping structure defining individual analyses. leave .method default method, plot outcome .plot = TRUE. argument .label produces latex webtex parsable labels data frame containing statistics results. Figure 2.3: Scatter-plot 13C 12C count rates regression line following equation (2.1) 2 times predicted standard deviation 13C represented area around regression line demarcated dashed lines. red points identify abnormal section analysis many outliers. simulated scenarios Fig. 2.3 visualise comparison model following Eq. (2.1) hypothetical bivariate 13C-12C ion count rates. Anomalous sections data-points model (red areas Fig. 2.3) can already observed simulations isotopically heterogeneous substrates merely visualization. information validation method, see preprint: Martin Schobben, Michiel Kienhuis, Lubos Polerecky. 2021. New methods detect isotopic heterogeneity Secondary Ion Mass Spectrometry, preprint Eartharxiv.","code":"tb_dia <- diag_R(simu_IC, \"13C\", \"12C\", type.nm, spot.nm, .plot = TRUE,                   .label = \"webtex\")"},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"outlier-detection-cooks-d","dir":"Articles","previous_headings":"2 Isotope ratios: A special case > 2.2 Regression-based diagnostics","what":"Outlier detection (Cook’s D)","title":"IC-diagnostics","text":"residuals first normalized come scale-dependence. can done using studentized residuals (\\(\\hat{e}_{}^*\\)) (see example Fox Weisberg 2018). studentized residual obtained dividing residual independent estimate standard deviation residuals. ensure independence, standard deviation residuals calculated leaving residual \\(\\)-th observation : \\[\\begin{equation}   \\hat{e}_i^* = \\frac{\\hat{e}_i}{S_{\\hat{e}_{(-)}} \\sqrt{(1-h_i)}} \\text{,}   \\tag{2.3} \\end{equation}\\] standard error regression (standard deviation residuals) also calculated leaving \\(\\)-th residual : \\[\\begin{equation}   S_{\\hat{e}_{(-)}} = \\sqrt{\\frac{1}{n-k-1} \\sum_{= 1}^{n}\\hat{e}_i^2}   \\tag{2.4} \\end{equation}\\] Eq. (2.3) \\(h_i\\) represents leverage independent variable (\\(X^\\)), hat-value. hat-value measures distance mean independent variable \\(X_i^\\): \\[\\begin{equation}  h_i = \\frac{1}{n} + \\frac{ \\left( X_i^- \\bar{X}_a \\right)^2 }{\\sum_{j=1}^n \\left(X_j^-  \\bar{X}_a \\right)^2}  \\tag{2.5} \\end{equation}\\] larger deviation \\(X_i^\\) mean (\\(\\bar{X}_a\\)) leverage data-point regression line. Given “ideal” simulation satisfies conditions initially described “ideal” linear model (Eq. (2.1)), estimated \\(\\hat{e}\\) can used assess deviations “ideal linear model”, thereby provide measure representative \\(\\bar{R}\\) sampled spot. goal residual analysis therefore identify influence coefficient; case influence \\(\\bar{R}\\), determining leverage discrepancy (outlyingness) variable \\(X^\\), : \\[\\begin{equation}   \\text{Influence} = \\text{Leverage} + \\text{Discrepancy}     \\tag{2.6} \\end{equation}\\] already determined outlyingness; studentized residuals, leverage; hat-values, independent variable, possible determine influence \\(X^\\) linear model (Eq. (2.6)). influence can quantified Cook’s Distance (Cook’s D). formulation overcomes effect high leverage necessarily require data-point influential, Cook’s D combines hat-values (Eq. (2.5)) studentized residuals (Eq. (2.3)), new equation: \\[\\begin{equation}   D_i = \\frac{e_{}^{*}\\phantom{}^2}{k + 1} \\times \\frac{h_i}{1- h_i}   \\tag{2.7} \\end{equation}\\] , \\(k\\) stands number coefficients regression model. quantify whether \\(D_i\\) substantially larger rest sample’s \\(D\\) cut-value can defined follows. \\[\\begin{equation}   D_c =4/ (n-k-1)   \\tag{2.8} \\end{equation}\\] calculations internally performed consecutive call base lm() broom::augment() (Robinson, Hayes, Couch 2022).","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"detecting-intra-analysis-isotope-varaibility-with-significant-outliers","dir":"Articles","previous_headings":"2 Isotope ratios: A special case > 2.2 Regression-based diagnostics","what":"Detecting intra-analysis isotope varaibility with significant outliers","title":"IC-diagnostics","text":"effectiveness recognising differentiating “ideal” substrate compromised measurements detected e.g. Cook’s D (outlier detection methods) can now calculated assessing impact averaged \\(R\\) value. can achieved applying joint model coefficient hypothesis test (Fisher test), diag_R() function designed measure deviation ideal “homogeneous” model (Eq. (2.1) default. \\[\\begin{equation} F_{(q-p),(n-q)} = \\frac{ (RSS_{\\theta_{0}}-RSS_{\\theta_{1}}) / (q-p) }{RSS_{\\theta_{1}} / (n-q)} \\tag{2.9} \\end{equation}\\] default settings diag_R() function produces following outcome. , \\(F_{R}\\) refers Fisher test statistic associated significance value \\(p_{R}\\). Sensitivity runs (outlined Schobben, Kienhuis Polerecky, prep) show Cook’s D outlier detection method performs best compared methods. Hence, problematic analyses possible intra-analysis isotope variability can detected, even obvious descriptive predictive statistics alone.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"inter-analysis-isotope-variability","dir":"Articles","previous_headings":"2 Isotope ratios: A special case","what":"Inter-analysis isotope variability","title":"IC-diagnostics","text":"diag_R() designed resemblance stat_R() function, thus also includes option check external structure \\(m\\)-series analyses usually comprised SIMS-based study (.e. severeal sputter pits). purpose, .nest argument included define grouping structure individual analysis. simulated example refer different scenarios isotopic variations (“ideal”, “symmetric”, “asymmetric” isotope variance). , provides test inter-analysis isotope variability (among sputter pits), can conducted follows. test provides approximation “grand mean” (\\(\\bar{\\bar{R}} = \\frac{1}{m}\\sum_{j =1}^{m}\\bar{R}_j\\)) study \\(\\hat{\\bar{R}}\\). substrate isotopically homogeneous across surface, analysis approach \\(\\bar{\\bar{R}}\\). can described ideal “homogeneous” model Equation (2.1), \\(m\\)-series viewed one long analysis \\(n\\)-measurements (\\(m\\sum_{=1}^{n}X_{}^{\\mid b}\\)). Introduction nominal factorial interacts \\(\\hat{R}\\) can therefore used, now account inter-analysis isotope variability. major difference approach case levels encoded represent \\(j\\)-th analysis \\(m\\)-series analyses. Encoding nominal variable can theory constitute many analyses needed, potentially creating excessive parameters considered fix component. grouping structure, particular interest, therefore instead represented random effect. introduces second level Equation (2.1), group (\\(j\\)-th analysis) can assume different \\(\\hat{R}\\), , different \\(\\bar{R}\\) may exist among various analysis. \\[\\begin{equation}  \\text{level 1:} \\quad \\hat{X}_{ij}^b = \\hat{R}_{j}X_{ij}^+  e_{ij} \\qquad \\text{} \\quad  e_{ij} \\sim N(0,\\sigma^2)    \\end{equation}\\] \\[\\begin{equation} \\text{level 2:} \\quad \\hat{R}_{j} = \\hat{\\bar{R}} + u_{j} \\qquad \\text{} \\quad u_{j} \\sim N(0, t^2) \\tag{2.10} \\end{equation}\\] Coefficients mixed linear model obtained Restricted Maximum Likelihood (REML) optimization using lme() function nlme package (Pinheiro, Bates, R Core Team 2022). ratio obtained log-likelihood (.e., maximized likelihood functions) restricted model unrestricted model, likelihood-ratio test (LR), can applied deduce significance including random component Equation (2.1). , larger difference AIC (\\(\\Delta AIC_{\\bar{R}}\\)) thus lower \\(p_{\\bar{R}}\\) indicates null model inter-analysis isotope variability becomes less appropriate.","code":"tb_ext <- diag_R(simu_IC, \"13C\", \"12C\", type.nm, spot.nm, .nest = type.nm,                   .label = \"webtex\")"},{"path":"https://martinschobben.github.io/point/articles/IC-diagnostics.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"IC-diagnostics","text":"Fitzsimons, . C. W., B. Harte, R. M. Clark. 2000. “SIMS stable isotope measurement: counting statistics analytical precision.” Mineralogical Magazine 64 (01): 59–83. https://doi.org/10.1180/002646100549139. Fox, John, Sanford Weisberg. 2018. R companion applied regression. Sage publications. Pinheiro, José, Douglas Bates, R Core Team. 2022. Nlme: Linear Nonlinear Mixed Effects Models. https://svn.r-project.org/R-packages/trunk/nlme/. Robinson, David, Alex Hayes, Simon Couch. 2022. Broom: Convert Statistical Objects Tidy Tibbles. https://CRAN.R-project.org/package=broom.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-introduction.html","id":"introduction-to-point","dir":"Articles","previous_headings":"","what":"Introduction to point","title":"IC-introduction","text":"large imprecision secondary ion generation Secondary Ion Mass Spectrometry (SIMS) analyses, associated registration ion counts detection devices, requires generation large quantities data order suppress uncertainty associated final output value. case either single ion abundances isotope ratios, causes accumulation large datasets numerous files. Additional meta-data files record machine-specific settings, e.g., regarding optics, beam stability mass spectrometer , e.g., Cameca NanoSIMS 50L (Slodzian et al. 1992) studies, vary depending type analyses environmental conditions. , although, default software instrument (e.g. CamecaTM software (Cameca, n.d.)) can data accumulation transformation, certain benefits getting control actions, hidden away code commercial software. Foremost, enables controlling ion count corrections related systematic biases linked detection systems. Furthermore, control data analysis allows sub-setting collating analyses calculate either internal external precision study. Perhaps powerful aspect greater freedom associated usage point performance diagnostics evaluate internal consistency ion count ratios. diagnostics can inform factors normally easily detectable, , heterogeneity sampled surface instability instrument individual runs. features discussed detail accompanying vignettes, whereas vignette delve basics work-flow.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-introduction.html","id":"nomenclature","dir":"Articles","previous_headings":"","what":"Nomenclature","title":"IC-introduction","text":"Concise terminology required discussing pulsed ion count data prevent ambiguity surrounding instance usage terms analytical substrate (rock biological sample), machine set-instrument performance well conventions associated statistics. become easy mix-terms, , instance, sample can refer physical sample analysed study, sample can also relate set individual objects collected statistical analysis, refer henceforward analytical substrate discussing former. levels ion counts detected accumulated study can another source confusion, single instance ion hitting detector, event. However, order get idea abundance certain chemical species, need course suite events together constitute single measurement. , measurement (\\(N_i\\)) minimal level machine starts recording generating data output. Due fundamental imprecision pulsed ion count measurements, necessary record whole collection, series, measurements order limit uncertainty surrounding abundance estimate chemical species. words, want know well sample (.e., statistical sample) approximates true population mean (\\(\\mu\\)). accumulation measurements, \\(n\\)-series measurements, collectively referred analysis (\\(N_{()} = M_j\\)). study, instance carbon isotope composition carbonate rock, rely one analysis, compare suite analyses across surface, even different specimens. referred study, \\(m\\)-series analyses \\(M_{(j)}\\). summarise: Sample: sample true population Analytical substrate: physical sample measured SIMS analysis Event: single event ion hitting detector Measurement: single count cycle \\(N_i\\) Analysis: \\(n\\)-series measurements \\(N_{()} = M_j\\) Study: \\(m\\)-series analyses \\(M_{(j)}\\), constituting different spots analytical substrate terminology used throughout documentation package point, summary included vignettes convenience.","code":"library(point) # load package"},{"path":"https://martinschobben.github.io/point/articles/IC-introduction.html","id":"the-point-workflow","dir":"Articles","previous_headings":"","what":"The point workflow","title":"IC-introduction","text":"basic work-flow consists three steps: Loading machine generated raw ion counts collating dataframe (tibble) function read_IC(). Correcting raw ion count data systematic biases related detection device function cor_IC(). Calculating statistics inform impact random biases precision analysis study function stat_X() single ions stat_R() isotope ratios. Performing diagnostics order detect intra- inter-isotope variability heart point package, contained function diag_R() following publication prove concept concerning methods behind diag_R() function: Martin Schobben, Michiel Kienhuis, Lubos Polerecky. 2021. New methods detect isotopic heterogeneity Secondary Ion Mass Spectrometry, preprint Eartharxiv.  detailed information: IC-read: reading raw ion count data useIC-process: processing ion count dataIC-precision: statistics concerning ion count precisionIC-diagnostics: diagnostics internal variation","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"IC-introduction","text":"Cameca. n.d. “CAMECA NANOSIMS 50 Secondary ion optics user ’ s guide.” Slodzian, Georges, Bernard Daigne, François Girard, Fabrice Boust, François Hillion. 1992. “Scanning secondary ion analytical microscopy parallel detection.” Biology Cell 74 (C): 43–50.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"precision-of-ion-count-data","dir":"Articles","previous_headings":"","what":"Precision of Ion Count Data","title":"IC-precision","text":"random nature secondary ions emitted analytical substrate (e.g. rock sample) sputtering can described Poisson statistics, can used predict precision pulsed ion counts (e.g. measurements Cameca NanoSIMS 50L) ideal circumstances. specifically, variation can deduced total counts secondary ions. Usefully, can compare predictive values descriptive statistics; essentially estimates true population location (e.g. mean) spread (variance). requires assumption sample taken infinite population. package point, tools provided perform statistical tests raw ion count data appropriate error propagation case isotope ratios. Working raw ion count data certain benefits allows subsetting certain parts analysis checking anomalous measurements. latter detailed vignette IC-diagnostics, heavily relies outlined functions. following packages used examples follow.","code":"library(point) # load package library(dplyr) # manipulating data library(purrr) # functional programming library(stringr) # manipulating strings"},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"nomenclature","dir":"Articles","previous_headings":"1 Precision of Ion Count Data","what":"Nomenclature","title":"IC-precision","text":"Sample: sample true population Analytical substrate: physical sample measured SIMS analysis Event: single event ion hitting detector Measurement: single count cycle \\(N_i\\) Analysis: \\(n\\)-series measurements \\(N_{()} = M_j\\) Study: \\(m\\)-series analyses \\(M_{(j)}\\), constituting different spots analytical substrate","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"example-dataset","dir":"Articles","previous_headings":"1 Precision of Ion Count Data","what":"Example dataset","title":"IC-precision","text":"Example datatsets can accessed follows function read_IC (information reading raw ion count data can found vignette IC-read). ion counts obtained 2018-01-19-GLENDON dataset includes species: \\({}^{12}\\mathrm{C}_{}\\), \\({}^{13}\\mathrm{C}_{}\\), \\({}^{12}\\mathrm{C}_{}\\)\\({}^{14}\\mathrm{N}_{}\\), \\({}^{40}\\mathrm{Ca}_{}\\)\\({}^{16}\\mathrm{O}_{}\\), poly-atomic. first step, counts single count cycle (\\(N_i\\)) normalised time took complete cycle (\\(0.541\\) s) account differences count times two different isotopes stable isotopic SIMS analysis. Hence, time period (\\(t\\)) isotope species \\(\\) measurement \\(\\) accumulated, count rate given \\[\\begin{equation}   X_i^{} = N_i^{} / t_i^{}   \\tag{1.1} \\end{equation}\\] function cor_IC() can perform transformation. function can also correct ion counts effects associated machine setup, , artifacts induced ion detector type. settings mostly affect accuracy analysis. information topic see vignette IC-process.","code":"# Use point_example() to access the examples bundled with this package   # Carry-out the routine point work-flow # Raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE, hide = FALSE)  # Vectors of isotope ratios  ion1 <-  c(\"13C\", \"12C 13C\", \"13C 14N\", \"12C 14N\", \"12C\") ion2 <-  c(\"12C\", \"12C2\", \"12C 14N\", \"40Ca 16O\", \"40Ca 16O\")  # Call function over vectors tb_rw <- map2(ion1, ion2, ~zeroCt(tb_rw, .x, .y, file.nm, sample.nm, .N = N.rw))  # Combine but remove duplicate observations (related isotope pairs)   tb_rw <- reduce(tb_rw, union) # Processing raw ion count data tb_pr <- cor_IC(tb_rw)"},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"internal-precision-of-ion-count-data","dir":"Articles","previous_headings":"1 Precision of Ion Count Data","what":"Internal precision of ion count data","title":"IC-precision","text":"Internal analytical precision consistency check series analytical results. package point contains several functions needed obtain descriptive predictive statistics (Poisson statistics) assess internal precision count data single ions well isotope ratios. -outlined examples, internal consistency ion count data generated NanoSIMS Cameca 50L validated, underlying principals statistical treatment explained.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"descriptive-and-predictive-statistics-for-single-ions","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data","what":"Descriptive and predictive statistics for single ions","title":"IC-precision","text":"function stat_X() can applied previously processed dataset gives descriptive predictive statistics individual ions. function requires following arguments: .IC, tibble containing processed ion counts (N.pr default), ion count rates (X.pr default), ion species name (species.nm default), time increments measurement (t.nm default). dots ... used define grouping variable identifying e.g. individual analysis (defined sample.nm file.nm names loaded data). addition, possible choose whether variable names can rendered \\(\\LaTeX\\); whether create tibble contains statistics summary table \"sum\"; tibble number observations input dataset \"stat\"; return tibble complete statistics original dataset \"complete\". Lastly one can decide produce subset statistic transformations .stat. overview avalaible statistical transformations can found names_stat_X Table 1.1: Summary statistics internal precision single ions stat_X(). underlying principals statistics calculated function stat_X() delineated detail .","code":"# Single ion descriptive an predictive statistics for all measured ions tb_X <- stat_X(tb_pr, sample.nm, file.nm, .stat = c(\"tot\", \"M\", \"S\", \"SeM\"),                 .label = \"webtex\")"},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"arithmetic-mean","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.1 Descriptive and predictive statistics for single ions","what":"Arithmetic mean","title":"IC-precision","text":"sample mean (\\(\\bar{X}^\\)) chemical species \\(\\) single analysis given : \\[\\begin{equation}   \\bar{X}^=  \\frac{1}{n} \\sum_{=1}^{n} X_i^  \\tag{1.2} \\end{equation}\\] validate internal consistency ion count data, necessary define internal precision analysis. can done standard deviation (\\(s_x\\)), gives spread sample, standard error mean (\\(s_{\\bar{x}}\\)), defines well \\(\\bar{X}\\) approximates true population mean (\\(\\mu\\)). statistics rely assumption underlying probability distribution follows normal (Gaussian) distribution.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"standard-deviation","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.1 Descriptive and predictive statistics for single ions","what":"Standard deviation","title":"IC-precision","text":"standard deviation limited sample population gives measure individual measurements spread mean one analysis, given : \\[\\begin{equation}   s_{X^} = \\sqrt{\\sum_{=1}^{n}  \\frac{(X_{}^-\\bar{X}^)^2}{n-1}}   \\tag{1.3} \\end{equation}\\] \\(n\\) number measurement cycles analysis \\(X_i\\) \\(\\)-th measurement cycle. number measurements subtracted one (\\(n - 1\\)) express \\(n - 1\\) \\((x_{}-\\bar{x})^2\\) independent. sample standard deviation can inform confidence whether single measurement falls within given range sample mean value.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"standard-error-of-the-mean","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.1 Descriptive and predictive statistics for single ions","what":"Standard error of the mean","title":"IC-precision","text":"standard error mean (\\(s_{\\bar{X}^}\\)) provides measure well mean limited sample (.e., analysis) approximates actual population mean. measure can used gauge precision analysis \\(n\\) measurement cycles. value dependent number measurements (\\(n\\)) thus becomes smaller increasing measurement numbers (.e. \\(\\bar{X}\\) becomes precise). standard error mean given following equation. \\[\\begin{equation}   s_{\\bar{X}^} = \\frac{s_{X^}}{\\sqrt{n}}   \\tag{1.4} \\end{equation}\\]","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"predicted-standard-deviation","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.1 Descriptive and predictive statistics for single ions","what":"Predicted standard deviation","title":"IC-precision","text":"Ion count measurements inherent fundamental imprecision, dictated random nature secondary ion production. restrict precision analysis certain analytical threshold. amplitude inherent variation can gauged Poisson statistics. Poisson distribution describes likelihood random events occurring defined (fixed) time-period. conditions satisfied validate assumption Poisson distribution observation \\(N\\) able occur larger number occasions probability event occurring particular occasions limited constant. case SIMS measurements \\(N_i\\) number secondary ions counted detector single measurement cycle (see Fitzsimons, Harte, Clark 2000). predicted standard deviation whole analysis directly related population mean \\(N_{()}\\) (\\(\\mu_{N}\\)) equation; \\[\\begin{equation}   \\sigma = \\sqrt(\\mu_{N})   \\tag{1.5} \\end{equation}\\] formulation population mean \\(N_{()}\\) (\\(\\mu_{N}\\)) can substituted mean number events (.e. secondary ion counts) per time unit, \\(\\bar{N}\\). predicted standard deviation can therefore deduced mean number counts particular ion per analysis, follows \\[\\begin{equation}   \\hat{s}_{N^} = \\sqrt{\\bar{N}^}   \\tag{1.6} \\end{equation}\\] : \\[\\begin{equation}   \\bar{N}^= \\frac{1}{n}\\sum_{=1}^{n}N_i^  \\tag{1.7} \\end{equation}\\] formulation, hat \\(\\hat{s}_N\\) denotes statistics predictive, instead \\(s_X\\) observed value. commonality two measures , however, estimate true population \\(\\sigma\\).","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"predicted-standard-error-of-the-mean","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.1 Descriptive and predictive statistics for single ions","what":"Predicted standard error of the mean","title":"IC-precision","text":"similar fashion, standard error mean Poisson statistics depends number measurements (\\(n\\)), can formulated follows: \\[\\begin{equation}   \\hat{s}_{\\bar{N}^} = \\sqrt{\\left( \\frac{ \\bar{N}^}{n}\\right)}    \\tag{1.8} \\end{equation}\\]","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"descriptive-and-predictive-statistics-for-isotope-ratios","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data","what":"Descriptive and predictive statistics for isotope ratios","title":"IC-precision","text":"function stat_R() can used previously processed dataset gives descriptive predictive statistics pre-specified isotope ratio (\\(R\\)); e.g. \\(^{13}\\)C/\\(^{12}\\)C. Note isotope pairs give sensible statistical results ionization potential two isotope one element relatively similar. function requires following arguments; ion count data (.IC) tibble outlined stat_X(), now also .ion1, character string representing rare isotope (e.g. \"13C\"); .ion2, common isotope (e.g. \"12C\") required. dots ... used define grouping variable analysis (defined sample- file-names loaded data). function, arguments .label .output tailor generated tibble specific needs; follows definitions outlined stat_X() (see ). function additional argument named .zero (default TRUE), removes analysis contain measurements zero counts, generates warning inform operation. Setting .zero TRUE prevents generation NaN output statistics division zero. Table 1.2: Summary statistics internal precision isotope ratios stat_R(). underlying principals delineated detail .","code":"# Descriptive an predictive statistics for 13C/12C ratios tb_R <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .label = \"webtex\",                 .stat = c(\"M\", \"RS\", \"RSeM\", \"hat_RS\", \"hat_RSeM\", \"chi2\"))"},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"descriptive-statistics-with-error-propagation-for-isotope-ratios","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.2 Descriptive and predictive statistics for isotope ratios","what":"Descriptive statistics with error propagation for isotope ratios","title":"IC-precision","text":"mean isotope ratio (\\(\\bar{R}\\)) can calculated mean values specific ions complete analysis. \\[\\begin{equation}   \\bar{R} = \\frac{\\frac{1}{n}\\sum_{= 1}^{n} X_i^{b}}{\\frac{1}{n}\\sum_{= 1}^{n} X_i^{}}    \\tag{1.9} \\end{equation}\\] value can considered estimate true isotopic value (\\(\\mu_R\\)). uncertainties associated pulsed ion count rates individual variables \\(X^{b}\\) (e.g. 13C) \\(X^{}\\) (e.g. 12C) need combined. can achieved applying; formula exact propagation error (Ku 1966). \\[\\begin{equation}   s_x^{2} \\approx \\sum_{= 1}^{n} \\left[ \\left( \\frac{\\partial F}{\\partial z_i} \\right) s_i^{2} \\right] + 2 \\sum_{j = 1}^{n} \\sum_{k = 1}^{n} \\left[ \\left( \\frac{\\partial F}{\\partial z_j} \\right) \\left( \\frac{\\partial F}{\\partial z_k} \\right) s_j s_k r_{(z_j, z_k)} \\right]   \\tag{1.10} \\end{equation}\\] ensures proper propagation error. formulation \\(r_{jk}\\) stands correlation coefficient variables \\(z_j\\) \\(z_k\\), defined \\[\\begin{equation}   r_{jk} = \\frac{1}{\\left(n-1\\right) s_j s_k} \\sum_{=1}^n{ \\left[ \\left(z_{j}\\right)_i - \\bar{z}_j \\right] \\left[ \\left(z_{k}\\right)_i - \\bar{z}_k \\right]}    \\tag{1.11} \\end{equation}\\] yields estimate sample correlation coefficient, values can range \\(-1\\) \\(+1\\), thereby recording inverse positive linear correlation variables, correlation \\(r\\) falls close zero. product \\(r_{(z_j, z_k)}\\), \\(s_j\\), \\(s_k\\) co-variance two input variables, , variable simplifies \\(s_{jk}\\). calculation stat function cov() used, method argument set \"pearson\" use \"everything\". Recasting Eq. (1.10) \\(F(...)\\) \\(R\\), variables \\(\\bar{X}^{b}\\) (e.g. 13C) \\(\\bar{X}^{}\\) (e.g. 12C), yields following equation: \\[\\begin{equation}   s_{R} = \\sqrt{ \\left( \\frac{ s_{X^{b}}}{\\bar{X}^{b}} \\right)^2 + \\left( \\frac{ s_{X^{}}}{\\bar{X}^{}} \\right)^2 - 2 \\frac{s_{\\bar{X}^{} \\bar{X}^{b}}}{\\bar{X}^{b}\\bar{X}^{}}} \\times \\bar{R}   \\tag{1.12} \\end{equation}\\] standard error mean isotope value \\({\\bar{R}}\\) obtained diving \\(s_{R}\\) \\(\\sqrt(n)\\). addition, standard deviation standard error mean isotope value can conveniently expressed relative values ‰ dividing \\(\\bar{R}\\) multiplying \\(1,000\\).","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"predictive-statistics-with-error-propagation-for-isotope-ratios","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.2 Descriptive and predictive statistics for isotope ratios","what":"Predictive statistics with error propagation for isotope ratios","title":"IC-precision","text":"isotope analysis based pulsed ion count data need least two different analyses, can get count ratio, defined Eq.(1.9), \\(X_i\\) time normalised count, count rate. Satisfying assumption provides us count-rate ratio \\(R\\) measurement \\(\\) isotopes \\(\\) \\(b\\), take mean \\(\\bar{R}\\) completed analysis estimate true isotope value \\(\\mu_R\\). predicted \\(\\hat{s}_X\\) can calculated single ions, also mean uncertainty isotope measurement can predicted (\\(\\hat{s}_R\\)). , requires proper error propagation incorporate cumulative errors counts isotopes; \\(N^{}\\) \\(N^{b}\\), one analysis (Fitzsimons, Harte, Clark 2000). Since count-rate ratio \\(R\\) linear function count ratio, possible use standard deviation count ratio \\(\\hat{s}_{N^{b}/N^{}}\\) instead \\(\\hat{s}_{R}\\), following : \\[\\begin{equation}   \\hat{s}_{R} \\approx \\left(\\frac{t^{}}{t^{b}} \\right) \\hat{s}_{N^{b}/N^{}}    \\tag{1.13} \\end{equation}\\] provides possibility express \\(\\hat{s}_{N^{b}/N^{}}\\) terms standard deviations individual counts, using Eq. (1.10), yields following equation; \\[\\begin{equation}   \\hat{s}_{N^{b}/N^{}} \\approx \\sqrt{ \\left( \\frac{\\hat{s}_{N^{b}}}{N^{b}} \\right)^2 + \\left( \\frac{\\hat{s}_{N^{}}}{N^{}} \\right)^2  - 2\\frac{r_{N^{b}N^{}} s_{N^{b}} s_{N^{}}}{N^{b}N^{}} }\\times \\frac{\\bar{N}^{b}}{\\bar{N}^{}}   \\tag{1.14} \\end{equation}\\] correlation coefficient (\\(r\\)) becomes zero, count statistics isotopes independent. predicted standard deviations \\(N^{b}\\) \\(N^{}\\) can approximated population mean, according Eq. (1.6), thereby transforming Eq. (1.14); \\[\\begin{equation}   \\hat{s}_{N^{b}/N^{}} \\approx \\sqrt{\\frac{1}{ \\bar{N}^{b}} + \\frac{1}{ \\bar{N}^{}}} \\times  \\frac{\\bar{N}^{b}}{\\bar{N}^{}}       \\tag{1.15} \\end{equation}\\] can substitute Eq.(1.13) obtain, \\[\\begin{equation}   \\hat{s}_{R} \\approx \\sqrt{\\frac{1}{ \\bar{N}^{b}} + \\frac{1}{ \\bar{N}^{}}} \\times  \\frac{\\bar{N}^{b}}{\\bar{N}^{}} \\left( \\frac{t^{}}{t^{b}} \\right)    \\tag{1.16} \\end{equation}\\] , equivalent , \\[\\begin{equation}   \\hat{S}_{R} \\approx \\sqrt{\\frac{1}{ \\bar{N}^{b}} + \\frac{1}{ \\bar{N}^{}}} \\times  \\bar{R}   \\tag{1.17} \\end{equation}\\] Eq. (1.17), can substitute Eq. (1.7) \\(\\bar{N}^{b}\\) \\(\\bar{N}^{b}\\), respectively. \\[\\begin{equation}   \\hat{s}_{R} =          \\sqrt{              \\left(                  \\frac{1}{\\sum_{= 1}^{n}{N_i^}} \\right)  +               \\left(                   \\frac{1}{\\sum_{= 1}^{n}{N_i^b}} \\right)} \\times \\bar{R} \\sqrt{n}                  \\tag{1.18} \\end{equation}\\] predicted standard error mean repeated set measurements one analysis : \\[\\begin{equation}   \\hat{s}_{\\bar{R}} =          \\sqrt{              \\left(                  \\frac{1}{\\sum_{= 1}^{n}{N_i^}} \\right)  +               \\left(                   \\frac{1}{\\sum_{= 1}^{n}{N_i^b}} \\right)}  \\times  \\bar{R}                  \\tag{1.19} \\end{equation}\\] predicted standard deviation (Eq. (1.18)) standard error mean (Eq. (1.19)) can expressed relative uncertainties ‰, following transformation descriptive statistics.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"comparing-predicted-and-descriptive-statistics","dir":"Articles","previous_headings":"1 Precision of Ion Count Data > 1.3 Internal precision of ion count data > 1.3.2 Descriptive and predictive statistics for isotope ratios","what":"Comparing predicted and descriptive statistics","title":"IC-precision","text":"reduced \\(\\chi^2\\) can used assess machine performance cross-validates observed error estimate theoretical Poisson-based precision. example, reduced \\(\\chi^2\\) isotope ratio equates : \\[\\begin{equation}   \\chi^2 = \\left( \\frac{s_{\\bar{R}}} {\\hat{s}_{\\bar{R}}} \\right)^2      \\tag{1.20} \\end{equation}\\] values close \\(1\\) suggest good agreement actual measurement predicted value (Kilburn Wacey 2015). Values lower \\(1\\) suggest analysis better predicted, values higher \\(1\\) indicate analysis worse predicted Poisson statistics.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"external-precision-of-ion-count-data","dir":"Articles","previous_headings":"1 Precision of Ion Count Data","what":"External precision of ion count data","title":"IC-precision","text":"series several ion count analyses usually performed study. consistency \\(m\\)-series analyses usually gauged homogeneous reference material; -called external precision, repeatability reproducibility study (Fitzsimons, Harte, Clark 2000). value usually reported standard deviation \\(m\\)-series analyses reference material. calculating statistic \\(n\\) Eq. (1.3) replaced \\(m\\). standard deviation reported interested single analysis relates variability study, variability sum random nature counting statistics, machine performance homogeneity analytical substrate. Conversely, interested precisely can approach mean \\(m\\)-series analysis (.e. mean study). Similarly predicted standard deviation \\(m\\)-series analyses can calculated following similar conventions outlined . , substitute \\(\\bar{N}^\\) chemical species \\(\\) \\(\\bar{M}^\\) (.e., mean counts \\(m\\)-series analyses) Eq. (1.6) single ions (1.14) (subsequent derivations equation) isotope ratios. Note, formulations consider counts per analysis counts per measurement. calculate external precision ion ratios package point, use .nest argument stat_R() define groupings analyses (e.g. raw ion count dataset containing replicate measurements reference material). Table 1.3: Summary statistics external precision isotope ratios. number counts single analysis \\(j\\) (\\(M_j\\)) equal sum counts (\\(N_i\\)) analysis \\(n\\) measurements, thus: \\[\\begin{equation}   \\sum_{j=1}^m M_j^= m \\sum_{=1}^n N_i^   \\tag{1.21} \\end{equation}\\] Given previous relationship, average predicted standard error mean single analyses approximate predicted standard deviation viewed one single continuous analysis, \\(m\\)-series analyses (see Fitzsimons, Harte, Clark 2000). can validate derivation follows: values match confirm previous relationship study.","code":"# external precision of the dataset  tb_R_ext  <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .nest = file.nm,                      .stat =  c(\"M\", \"RS\", \"RSeM\", \"hat_RS\", \"hat_RSeM\", \"chi2\"),                      .label = \"webtex\") # Prove of the previous statement with the example dataset tb_R_int <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm,  file.nm, .stat = \"hat_RSeM\",                    .zero = TRUE)  tb_R_ext <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .nest = file.nm,                     .stat = \"hat_RS\",.zero = TRUE)  # The average of the internal relative predicted standard error of the mean  # (per mille) filter(tb_R_int, str_detect(sample.nm, \"Belemnite\")) %>%     pull(hat_RSeM_R_N.pr) %>%    mean() %>%    round(1) #> [1] 1.2  # The external predicted standard deviation (per mille) round(tb_R_ext$hat_RS_R_tot_N.pr, 1) #> [1] 1.2"},{"path":"https://martinschobben.github.io/point/articles/IC-precision.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"IC-precision","text":"Fitzsimons, . C. W., B. Harte, R. M. Clark. 2000. “SIMS stable isotope measurement: counting statistics analytical precision.” Mineralogical Magazine 64 (01): 59–83. https://doi.org/10.1180/002646100549139. Kilburn, Matt R., David Wacey. 2015. “Nanoscale secondary ion mass spectrometry (NanoSIMS) analytical tool geosciences.” RSC Detection Science 2015-Janua (4): 1–34. https://doi.org/10.1039/9781782625025-00001. Ku, H. H. 1966. “Notes use propagation error formulas.” Journal Research National Bureau Standards, Section C: Engineering Instrumentation 70C (4): 263. https://doi.org/10.6028/jres.070c.025.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"accuracy-of-ion-count-data","dir":"Articles","previous_headings":"","what":"Accuracy of Ion Count Data","title":"IC-process","text":"Systematic bias can introduced way secondary ions generated primary Cs+ O- bombardment analytical substrate well ion--electron conversion efficiency detection systems. Commonly used detection system electron multipliers (EM) low secondary ion currents Faraday cups (FC) high secondary ion currents.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"nomenclature","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data","what":"Nomenclature","title":"IC-process","text":"Sample: sample true population Analytical substrate: physical sample measured SIMS analysis Event: single event ion hitting detector Measurement: single count cycle \\(N_i\\) Analysis: \\(n\\)-series measurements \\(N_{()} = M_j\\) Study: \\(m\\)-series analyses \\(M_{(j)}\\), constituting different spots analytical substrate following packages used examples follow.","code":"library(point) # load package library(dplyr) # manipulating data library(ggplot2) # manipulating strings library(polyaAeppli) # Polya-Aeppli distribution library(tibble) # tibble dataframe"},{"path":[]},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"analytical-bias-introduced-by-electron-multipliers","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data > 1.2 Systematic bias by ion detection devices","what":"Analytical bias introduced by electron multipliers","title":"IC-process","text":"EM gain measure electron output current relative ion input amplification ion--electron conversion. process incident secondary ion triggers generation electron first dynode (conversion dynode) EM channel; turn, resultant secondary electron strikes consecutive dynode thereby amplifying signal, latter process secondary electron amplification repeated multiple times (Cameca NanoSIMS 50L generally results gain \\(10^8\\) electrons). Figure 1.1: Graphic representation EM ion detection device phase successive cascading charge amplification, signal converted voltage (EM high voltage, EMHV; see Fig. 1.1), voltage proportional EM gain. last conversion depends age EM EMHV usually increased successive age preserve ion--electron efficiency suitable sensitivity.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"electron-multiplier-yield","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data > 1.2 Systematic bias by ion detection devices > 1.2.1 Analytical bias introduced by electron multipliers","what":"Electron Multiplier Yield","title":"IC-process","text":"amplitude EM secondary electron output EMHV conversion follows -called Peak Height Distribution (PHD). tuning EM detection system, EM secondary electron output EMHV conversion optimized probability electron output certain EMHV higher pre-defined threshold. discriminator threshold set filter-background noise (typically 5\\(\\,\\)ct\\(\\,\\)s-). However discriminator threshold inevitably also cut-part genuine EM secondary electron output (Slodzian et al. 2001). Figure 1.2: example typical PHD distribution. effect discriminator threshold EM Yield examplified shaded area underneath probability density function, pertain probability EM output larger threshold causes true EM Yield \\(Y_{EM}\\) smaller 100% (see Fig. 1.2). PHD distribution adheres following principles: Poisson statistics can account random processes involved initial generation secondary ions (coupled incident ions first dynode) stage successive multiplication secondary electron generation subsequent dynodes along EM channel. geometric distribution describes success amplification dynode, independent identical probabilities dynode. Successive stages electron amplification results compounding random processes, shape PHD converges fourth fifth stage amplification (Dietz Hanrahan 1978). Given previous points, probability whole amplification process can gauged taking geometric compounded Poisson (Polya-Aeppli) random variable (Dietz 1970; Dietz Hanrahan 1978), can described following equation: \\[\\begin{equation}    P(x;\\lambda, p) \\; = \\; \\text{Pr}(X = x) \\; =\\\\    \\begin{cases}      e^{-\\lambda}, & \\text{} x = 0 \\\\       e^{-\\lambda}\\sum_{n=1}^{y}{\\frac{\\lambda^n}{n!}}\\binom{y-1}{n-1}p^{\\lambda-n}(1-p)^n, & \\text{} x = 1,2,... \\\\    \\end{cases}   \\tag{1.1}  \\end{equation}\\] \\(\\lambda\\) \\(p\\) determine, respectively, location shape Polya-Aeppli probability distribution, see Burden (2014) full derivation equation associated parameters. Note, discriminator threshold causes \\(x > 0\\). Furthermore, \\(p\\) = 0, Polya-Aeppli probability distribution simplifies Poisson distribution. discriminator threshold value, mean variance measured PHD, can used calculate probability successful ion--electron conversions analysis. provides means get accurate estimate true EM Yield (\\(Y_{EM}\\)). Th function cor_yield calculates yield given mean (mean_PHD), standard deviation (SD_PHD), threshold value PHD, makes use package pPolyaAeppli (Burden 2014). \\(Y_{EM}\\) can used calculate corrected counts count rates. \\[\\begin{equation}   X_{}^* = \\frac{X_i }{Y_{EM}}    \\tag{1.2} \\end{equation}\\] shape PHD distribution changes age EM deleterious effect secondary ion--electron conversion can alleviated changing EMHV. Tools assessment EM deterioration dealt subsequent section.","code":"# original count rate of a chemical species x <- 30000 # function to correct count rate based on EM Yield cor_yield(x, mean_PHD = 210, SD_PHD = 60, thr_PHD = 50) #> [1] 30007.95"},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"dead-time","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data > 1.2 Systematic bias by ion detection devices > 1.2.1 Analytical bias introduced by electron multipliers","what":"Dead time","title":"IC-process","text":"Another bias introduced EM ion detection devices time associated recovery ion hits first dynode. intermediate time, second ion arriving time can recorded electronic paralysis EM. Although dead time (\\(t_{ns}\\)) small (\\(44\\,\\)ns), high count frequencies can cause cumulate effect re-occurring phenomenon become significant final count numbers. count rates can corrected following equation: \\[\\begin{equation}   X_{}^{*} = \\frac{X_i}{1- X_i  \\times t_{ns} \\times 10^9}   \\tag{1.3} \\end{equation}\\] function cor_DT implemented correct systematic bias EM devices. convenient workflow functions correct EM count biases wrapped function cor_IC(). function takes tibble loaded function read_IC() (see vignette IC-read) requires setting following arguments: N, variable raw ion count;t, variable time increments; Det character string variable identifying ion detection system: EM (\"EM\") FC (\"FC\"); deadtime, numeric value deadtime nanoseconds; thr_PHD, numeric value discriminator threshold. function returns original tibble adds variables: Xt.rw, ion count rates uncorrected detection device-specific biases; Xt.pr, ion count rates corrected detection device-specific biases; N.pr, counts corrected detection device-specific biases.","code":"# corrected count rate for a deadtime of 44 ns cor_DT(x, 44) #> [1] 30039.65 # Use point_example() to access the examples bundled with this package   # Carry-out the routine point workflow   # Carry-out the routine point workflow # Raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE)  # processing raw ion count data tb_pr <- cor_IC(tb_rw)"},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"analytical-bias-introduced-by-faraday-cups","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data > 1.2 Systematic bias by ion detection devices","what":"Analytical bias introduced by Faraday Cups","title":"IC-process","text":"included future.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"systematic-bias-by-ionization-yield-fluctuations","dir":"Articles","previous_headings":"1 Accuracy of Ion Count Data","what":"Systematic bias by ionization yield fluctuations","title":"IC-process","text":"contrast EM yield, ionization yield defines efficiency whereby secondary ions generated per incident primary ion. probability whereby primary beam produced secondary ions depends strongly properties substrate (matrix effects) evolving sputter pit well machine settings, beam type (Cs+ O-) sample charging. latter effect sample charge build-combined deepening sputter pit connected large systematic biases seen count rates individual ions (see Fig. 1.3) throughout single analysis (Fitzsimons, Harte, Clark 2000). Figure 1.3: Changes ionization potential examplified single ion monotonic trends count rates subsequent measurements single analysis NanoSIMS Cameca50L. systematic changes induced ionization differences count rate affect modulate count rates isotopes equally (see Fig. 1.3). formula exact propagation error (Ku 1966) can deduced error co-variate ratios, isotope ratios (\\(R\\)), effectively dampened co-variate term equation (see vignette IC-precision) Fitzsimons, Harte, Clark (2000). However, case none-isotope ion ratios propagated error also largely effect systematic variance induced ionization trends (see Fig. 1.4). Figure 1.4: Changes ratios none-isotope isotope ratios compared. Upon plotting count rate ratios time (Fig. 1.4), becomes apparent none-isotope ratios affected monotonic trends duration analysis. effect reflects differential ionization potentials trajectories secondary beam stabilization analysis (explained ; Fig. 1.3). \\[\\begin{equation}   y_t = l_0 + T_t + P_t + \\epsilon_t    \\tag{1.4}  \\end{equation}\\] Time-series can decomposed several components (Eq. (1.4)); base level mean time series; \\(l0\\), structural trend component \\(T_t\\) change dependent time increment, cyclical component \\(P_t\\) noise component \\(\\epsilon_t\\). Structural trends variable (.e. count rates species \\(X_i^\\)) based independent variable time (.e. \\(n\\)- series measurements) can described regression analysis simplest implementation presented linear regression model: \\[\\begin{equation}   \\hat{y}_t = \\beta_0 + \\beta_1x_t + \\epsilon_t   \\tag{1.5} \\end{equation}\\] General Additive Model (GAM) extension model addition smoothing function replacing linear term previous function (Eq (1.5): \\[\\begin{equation}   \\hat{y}_t = \\beta_0 + f(x_1) + \\epsilon_t   \\tag{1.6} \\end{equation}\\] function predict_ionize() provides convenient implementation GAM package mgcv, function s(), define smooth function gam() call. protocol implemented assures effective bandwidth selection based goodness fit measured penalized information criterion. knowledge ionization represented global trend, allows subtraction model fit actual count rate data allow accurate assessment \\(l0\\) well random component \\(\\epsilon_t\\) informing precision unbiased large systematic offset. \\[\\begin{equation}   X_i^* = \\bar{\\hat{X}}^+ (X_i^- \\hat{X}_i^)   \\tag{1.7} \\end{equation}\\] point package provides additional diagnostic tools assess whether model represents - -fit data (see vignette IC-diagnostics). Figure 1.5: GAM predicted model fit (dashed black line) single ion count rates median count rate (solid blue line). Figure 1.6: extraction \\(l0\\) \\(\\epsilon_t\\) components, appliciation Eq. (1.7), thereby yielding corrected none-isotope ion count ratios.","code":"tb_dt <- predict_ionize(tb_pr, file.nm)"},{"path":"https://martinschobben.github.io/point/articles/IC-process.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"IC-process","text":"Burden, Conrad J. 2014. “R Implementation Polya-Aeppli Distribution.” http://arxiv.org/abs/1406.2780. Dietz, L. . 1970. “General method computing statistics charge amplification particle photon detectors used pulse counting.” International Journal Mass Spectrometry Ion Physics 5 (1-2): 11–19. https://doi.org/10.1016/0020-7381(70)87002-4. Dietz, L. ., L. R. Hanrahan. 1978. “Electron multiplier-scintillator detector pulse counting positive negative ions.” Review Scientific Instruments 49 (9): 1250–6. https://doi.org/10.1063/1.1135590. Fitzsimons, . C. W., B. Harte, R. M. Clark. 2000. “SIMS stable isotope measurement: counting statistics analytical precision.” Mineralogical Magazine 64 (01): 59–83. https://doi.org/10.1180/002646100549139. Ku, H. H. 1966. “Notes use propagation error formulas.” Journal Research National Bureau Standards, Section C: Engineering Instrumentation 70C (4): 263. https://doi.org/10.6028/jres.070c.025. Slodzian, Georges, M Chaintreau, R Dennebouy, Rousse. 2001. “Precise situ measurements isotopic abundances pulse.” European Physical Journal Applied Physics 14: 199–231. https://doi.org/10.1051/epjap:2001160.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"reading-raw-ion-count-data","dir":"Articles","previous_headings":"","what":"Reading Raw Ion Count Data","title":"IC-read","text":"read functions currently supported data generated Cameca NanoSIMS 50L. Raw ion count data accompanying metadata extracted collated single tibble text files extensions .is_txt, .chk_is .stat, respectively. files can usually found single directory, often constitute analysis series spots.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"nomenclature","dir":"Articles","previous_headings":"","what":"Nomenclature","title":"IC-read","text":"Sample: sample true population Analytical substrate: physical sample measured SIMS analysis Event: single event ion hitting detector Measurement: single count cycle \\(N_i\\) Analysis: \\(n\\)-series measurements \\(N_{()} = M_j\\) Study: \\(m\\)-series analyses \\(M_{(j)}\\), constituting different spots analytical substrate following packages used examples follow.","code":"library(point) # load package library(dplyr) # manipulating data library(ggplot2) # plot library(polyaAeppli) # Polya-Aeppli distribution library(purrr) # functional programming library(tidyr) # tidyr data"},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"example-dataset","dir":"Articles","previous_headings":"","what":"Example dataset","title":"IC-read","text":"One example dataset bundled package: 2018-01-19-GLENDON. dataset generated Cameca NanoSIMS 50L Department Earth Sciences Utrecht University. suffix GLENDON stands glendonite authigenic calcium carbonate seafloor precipitate. excerpt included contains -house reference (belemnite rostra) used check repeatability/external reproducibility. Ion detection 7 individual species performed solely electron multipliers (EM) main purpose producing stable carbon isotope ratios (13C/12C). example directories can accessed function point_example().","code":"# Use point_example() to access the examples bundled with this package  # If path is 'NULL', the example directories will be listed point_example() #> [1] \"2018-01-19-GLENDON\" # Accessing the example directory 2018-01-19-GLENDON point_example(\"2018-01-19-GLENDON\") #> [1] \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON\""},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"extracting-raw-ion-count-data-and-associated-metadata","dir":"Articles","previous_headings":"","what":"Extracting raw ion count data and associated metadata","title":"IC-read","text":"function read_IC() takes character string indicating directory file name. enables selecting extraction associated metadata setting argument meta = TRUE (default), metadata can include attribute argument hide = TRUE (default) additional columns hide = FALSE. added bonus provides consistency checks metadata generate easily interpretable warnings. generates tibble includes; file.nm: file name t.nm: time increments measurements \\(t_i\\) N.rw: individual measurement counts \\(N_i\\) species.nm: chemical species name sample.nm: physical sample name n.rw: total number measurements \\(n\\) bl.nm: count block identifier Warnings signals used inform inform e.g. metadata files associated data files ion counts. files omitted argument combination call read_IC(). data complemented metadata associated analysis. num.mt: measurement order case multiple chemical species mass.mt: mass measured det.mt: number detector trolley tc.mt: measurement time measurement blanked seconds rad.mt: radius mass spectrometer sample.nm: assigned sample name data: date analysis presput.mt: time allocated presputtering analytical substrate seconds bl_num.mt: block number meas_bl.mt: number measurements per block width_hor.mt: horizontal Secondary Ion Beam Centering Volts width_ver.mt: vertical Secondary Ion Beam Centering Volts prim_cur_start.mt: Primary Ion Beam current pico Ampere beginning analysis prim_cur_after.mt: Primary Ion Beam current pico Ampere end analysis rast_com.mt: raster dimensions micrometer blank_rast.mt: percentage blanked raster det_type.mt: type ion counting devise; Electron Multiplier (EM) Faraday Cup (FC) case EM usage ion counting metadate complemented ; mean_PHD.mt: mean pulse height amplitude Volts approximate peak height distribution (PHD) SD_PHD.mt: standard deviation pulse height amplitude Volts approximate PHD EMHV.mt: EM High Voltage case FC usage ion counting metadate complemented ; FC_start.mt: FC background count data acquisition FC_after.mt: FC background count data acquisition","code":"(tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE)) #> Registered S3 methods overwritten by 'readr': #>   method                    from  #>   as.data.frame.spec_tbl_df vroom #>   as_tibble.spec_tbl_df     vroom #>   format.col_spec           vroom #>   print.col_spec            vroom #>   print.collector           vroom #>   print.date_names          vroom #>   print.locale              vroom #>   str.col_spec              vroom #> # A tibble: 81,900 × 7 #>    file.nm                 t.nm  N.rw species.nm sample.nm         n.rw bl.nm #>    <chr>                  <dbl> <dbl> <chr>      <chr>            <dbl> <int> #>  1 2018-01-19-GLENDON_1_1  0.54 12040 12C        Belemnite,Indium  3900     1 #>  2 2018-01-19-GLENDON_1_1  1.08 11950 12C        Belemnite,Indium  3900     1 #>  3 2018-01-19-GLENDON_1_1  1.62 12100 12C        Belemnite,Indium  3900     1 #>  4 2018-01-19-GLENDON_1_1  2.16 11946 12C        Belemnite,Indium  3900     1 #>  5 2018-01-19-GLENDON_1_1  2.7  12178 12C        Belemnite,Indium  3900     1 #>  6 2018-01-19-GLENDON_1_1  3.24 12114 12C        Belemnite,Indium  3900     1 #>  7 2018-01-19-GLENDON_1_1  3.78 12147 12C        Belemnite,Indium  3900     1 #>  8 2018-01-19-GLENDON_1_1  4.32 12092 12C        Belemnite,Indium  3900     1 #>  9 2018-01-19-GLENDON_1_1  4.86 12024 12C        Belemnite,Indium  3900     1 #> 10 2018-01-19-GLENDON_1_1  5.4  12045 12C        Belemnite,Indium  3900     1 #> # … with 81,890 more rows attr(tb_rw, \"metadata\") #> # A tibble: 81,900 × 38 #>    file.nm       t.nm species.nm sample.nm bl.nm num.mt bfield.mt rad.mt mass.mt #>    <chr>        <dbl> <chr>      <chr>     <int>  <dbl> <chr>     <chr>  <chr>   #>  1 2018-01-19-…  0.54 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  2 2018-01-19-…  1.08 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  3 2018-01-19-…  1.62 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  4 2018-01-19-…  2.16 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  5 2018-01-19-…  2.7  12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  6 2018-01-19-…  3.24 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  7 2018-01-19-…  3.78 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  8 2018-01-19-…  4.32 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #>  9 2018-01-19-…  4.86 12C        Belemnit…     1      1 1435.746  310.6… 12.000… #> 10 2018-01-19-…  5.4  12C        Belemnit…     1      1 1435.746  310.6… 12.000… #> # … with 81,890 more rows, and 29 more variables: tc.mt <dbl>, coord.mt <chr>, #> #   file_raw.mt <chr>, bl_num.mt <chr>, meas_bl.mt <chr>, rejection.mt <chr>, #> #   slit.mt <chr>, lens.mt <chr>, presput.mt <chr>, rast_com.mt <chr>, #> #   frame.mt <chr>, blank_rast.mt <chr>, raster.mt <chr>, tune.mt <chr>, #> #   reg_mode.mt <chr>, chk_frm.mt <chr>, sec_ion_cent.mt <chr>, #> #   frame_sec_ion_cent.mt <chr>, width_hor.mt <chr>, width_ver.mt <chr>, #> #   E0S_cent.mt <chr>, width_V.mt <chr>, E0P_off.mt <chr>, …"},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"extracting-metadata-for-machine-performance-assessment","dir":"Articles","previous_headings":"","what":"Extracting metadata for machine performance assessment","title":"IC-read","text":"Alternatively, one can also extract metadata analysis , e.g., assess machine performance sequence analyses. example, one can assess Peak Height Distribution (PHD) series analyses. Figure 5.1: PHD normalised units Y-axis approximated Polya-Aeppli density probability function parameter \\(\\lambda\\) \\(p\\) location shape curve. parameters can calculated using metadata variables mean_PHD (mean) SD_PHD (variance), compiled read_meta function. compounded Polya-Aeppli density probability function can approximate peak height distribution (Dietz 1970; Dietz Hanrahan 1978). package pPolyaAeppli (Burden 2014) together discriminator threshold value (usually 50 V) enables calculating EM Yield (\\(Y\\)) (Fig. 5.1). topic can found vignette IC-process.","code":""},{"path":"https://martinschobben.github.io/point/articles/IC-read.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"IC-read","text":"Burden, Conrad J. 2014. “R Implementation Polya-Aeppli Distribution.” http://arxiv.org/abs/1406.2780. Dietz, L. . 1970. “General method computing statistics charge amplification particle photon detectors used pulse counting.” International Journal Mass Spectrometry Ion Physics 5 (1-2): 11–19. https://doi.org/10.1016/0020-7381(70)87002-4. Dietz, L. ., L. R. Hanrahan. 1978. “Electron multiplier-scintillator detector pulse counting positive negative ions.” Review Scientific Instruments 49 (9): 1250–6. https://doi.org/10.1063/1.1135590.","code":""},{"path":"https://martinschobben.github.io/point/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Schobben. Maintainer.","code":""},{"path":"https://martinschobben.github.io/point/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schobben M (2022). point: Reading, Processing, Analysing Raw Ion Count Data. R package version 0.0.0.9003, https://martinschobben.github.io/point/.","code":"@Manual{,   title = {point: Reading, Processing, and Analysing Raw Ion Count Data},   author = {Martin Schobben},   year = {2022},   note = {R package version 0.0.0.9003},   url = {https://martinschobben.github.io/point/}, }"},{"path":[]},{"path":"https://martinschobben.github.io/point/index.html","id":"introduction-to-point","dir":"","previous_headings":"","what":"Introduction to point","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"project originally inspired lack detailed insight inner workings default software Cameca NanoSIMS50L (Utrecht University). Hence project objective processing raw ion count data ion isotope ratios point-sourced measurements. Combined statistics internal external precision , respectively, individual analyses complete series analyses, functionality allows interrogation analytical consistency. Access raw ion count data , furthermore, useful allows detection anomalous values associated e.g. machine instability heterogeneity analysed substrate. Upon detection, anomalous values can omitted analysed delineate source variation. point package still development master branch functioning. Functionality automatically tested CI.","code":""},{"path":"https://martinschobben.github.io/point/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"construction R (R Core Team 2022) package point associated documentation aided packages; devtools (Wickham, Hester, et al. 2021), roxygen2 (Wickham, Danenberg, et al. 2021), testthat (Wickham 2022), knitr (Xie 2014 ; Xie 2015), rmarkdown (Xie, Allaire, Grolemund 2018; Xie, Dervieux, Riederer 2020), bookdown (Xie 2016) superb guidance book: R packages: organize, test, document, share code, Wickham (2015). addition, package relies set external packages tidyverse universe, including: dplyr (Wickham et al. 2022), tidyr (Wickham Girlich 2022), tibble (Müller Wickham 2021), stringr (Wickham 2019), readr (Wickham, Hester, Bryan 2022), magrittr (Bache Wickham 2022), rlang (Henry Wickham 2022), purrr (Henry Wickham 2020) internal functioning well specialised statistics; polyaAeppli (Burden 2014), broom (Robinson, Hayes, Couch 2022), broom.mixed (Bolker Robinson 2022), nlme (Pinheiro, Bates, R Core Team 2022), mgcv (Wood 2022). Plots made ggplot2 (Wickham 2016)","code":""},{"path":"https://martinschobben.github.io/point/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"can install released version point","code":"# Install point from GitHub: # install.packages(\"devtools\") devtools::install_github(\"MartinSchobben/point\")"},{"path":"https://martinschobben.github.io/point/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"Load point library.","code":"library(point)"},{"path":"https://martinschobben.github.io/point/index.html","id":"the-point-workflow","dir":"","previous_headings":"","what":"The point workflow","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"detailed outline general point workflow given vignette IC-introduction (vignette(\"IC-introduction\")).  read, process analyse raw ion count data use functions: read_IC(): raw ion count data (Cameca NanoSIMS 50L) cor_IC(): process ion count data stat_X(): analyse single ion count data stat_R(): analyse ion ratios diag_R(): diagnose ion ratios","code":""},{"path":"https://martinschobben.github.io/point/index.html","id":"example-1-internal-precision-of-isotope-ratios","dir":"","previous_headings":"","what":"Example 1: internal precision of isotope ratios","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"example Cameca NanoSIMS50L raw data files can extracted, processed analysed 13C/12C isotope ratio (). produces tibble descriptive predictive (Poisson) statistics (demarcated ^) ion count data. can done single analysis order obtain internal precision.","code":"# Use point_example() to access the examples bundled with this package in the # inst/extdata directory.  # Raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE) #> Registered S3 methods overwritten by 'readr': #>   method                    from  #>   as.data.frame.spec_tbl_df vroom #>   as_tibble.spec_tbl_df     vroom #>   format.col_spec           vroom #>   print.col_spec            vroom #>   print.collector           vroom #>   print.date_names          vroom #>   print.locale              vroom #>   str.col_spec              vroom  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # Internal precision for 13C/12C ratios tb_R <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .label = \"webtex\")"},{"path":"https://martinschobben.github.io/point/index.html","id":"example-2-external-precision-of-isotope-ratios","dir":"","previous_headings":"","what":"Example 2: external precision of isotope ratios","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"calculate external reproducibility isotope ratios one needs use .nest argument define sets analyses. detailed information: IC-read (vignette(\"IC-read\")): reading raw ion count data useIC-process (vignette(\"IC-process\")): processing ion count dataIC-precision (vignette(\"IC-precision\")): statistics concerning ion count precisionIC-diagnostics (vignette(\"IC-diagnostics\")): diagnostics internal variation","code":"# external precision for 13C/12C ratios tb_R <- stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .nest = file.nm,                 .label = \"webtex\")"},{"path":"https://martinschobben.github.io/point/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Reading, Processing, and Analysing Raw Ion Count Data","text":"Bache, Stefan Milton, Hadley Wickham. 2022. Magrittr: Forward-Pipe Operator r. https://CRAN.R-project.org/package=magrittr. Bolker, Ben, David Robinson. 2022. Broom.mixed: Tidying Methods Mixed Models. https://github.com/bbolker/broom.mixed. Burden, Conrad. 2014. polyaAeppli: Implementation Polya-Aeppli Distribution. https://CRAN.R-project.org/package=polyaAeppli. Henry, Lionel, Hadley Wickham. 2020. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr. ———. 2022. Rlang: Functions Base Types Core r Tidyverse Features. https://CRAN.R-project.org/package=rlang. Müller, Kirill, Hadley Wickham. 2021. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble. Pinheiro, José, Douglas Bates, R Core Team. 2022. Nlme: Linear Nonlinear Mixed Effects Models. https://svn.r-project.org/R-packages/trunk/nlme/. R Core Team. 2022. R: Language Environment Statistical Computing. Vienna, Austria: R Foundation Statistical Computing. https://www.R-project.org/. Robinson, David, Alex Hayes, Simon Couch. 2022. Broom: Convert Statistical Objects Tidy Tibbles. https://CRAN.R-project.org/package=broom. Wickham, Hadley. 2015. R Packages: Organize, Test, Document, Share Code. O’Reilly Media, Inc. https://r-pkgs.org/. ———. 2016. Ggplot2: Elegant Graphics Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org. ———. 2019. Stringr: Simple, Consistent Wrappers Common String Operations. https://CRAN.R-project.org/package=stringr. ———. 2022. Testthat: Unit Testing r. https://CRAN.R-project.org/package=testthat. Wickham, Hadley, Peter Danenberg, Gábor Csárdi, Manuel Eugster. 2021. Roxygen2: -Line Documentation r. https://CRAN.R-project.org/package=roxygen2. Wickham, Hadley, Romain François, Lionel Henry, Kirill Müller. 2022. Dplyr: Grammar Data Manipulation. https://CRAN.R-project.org/package=dplyr. Wickham, Hadley, Maximilian Girlich. 2022. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr. Wickham, Hadley, Jim Hester, Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr. Wickham, Hadley, Jim Hester, Winston Chang, Jennifer Bryan. 2021. Devtools: Tools Make Developing r Packages Easier. https://CRAN.R-project.org/package=devtools. Wood, Simon. 2022. Mgcv: Mixed GAM Computation Vehicle Automatic Smoothness Estimation. https://CRAN.R-project.org/package=mgcv. Xie, Yihui. 2014. “Knitr: Comprehensive Tool Reproducible Research R.” Implementing Reproducible Computational Research, edited Victoria Stodden, Friedrich Leisch, Roger D. Peng. Chapman; Hall/CRC. http://www.crcpress.com/product/isbn/9781466561595. ———. 2015. Dynamic Documents R Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://yihui.org/knitr/. ———. 2016. Bookdown: Authoring Books Technical Documents R Markdown. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/bookdown. Xie, Yihui, J. J. Allaire, Garrett Grolemund. 2018. R Markdown: Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown. Xie, Yihui, Christophe Dervieux, Emily Riederer. 2020. R Markdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.","code":""},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":null,"dir":"Reference","previous_headings":"","what":"Family of diagnostics functions for isotope count ratios — Cameca","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":"Cameca default CAMECA diagnostics CooksD regression diagnostics based Cook's D","code":""},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":"","code":"Cameca(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .alpha_level = 0.05,   .hyp = \"none\",   .mc_cores = 1 )  CooksD(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )  CV(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )  Rm(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )  norm_E(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )  QQ(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )  IR(   .IC,   .ion1,   .ion2,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"complete\",   .hyp = \"none\",   .alpha_level = 0.05,   .mc_cores = 1 )"},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":".IC tibble containing processed ion count data. .ion1 character string constituting heavy isotope (\"13C\"). .ion2 character string constituting light isotope (\"12C\"). ... Variables grouping. .X variable constituting ion count rate (defaults variables generated read_IC()) .N variable constituting ion counts (defaults variables generated read_IC().). .species variable constituting species analysed (defaults variables generated read_IC().). .t variable constituting time analyses (defaults variables generated read_IC().). .output Character string determining whether returned values minimal version `\"flag\"` (original dataset + diagnostics) extended version intermediate steps ion- isotope-wise summary statistics `\"complete\"`. .alpha_level significance level hypothesis test rejection level outliers. .hyp Hypothesis test appropriate selected method. .mc_cores Number workers parallel execution (work Windows).","code":""},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":"tibbletibble() containing either original dataset new columns related diagnostics diagnostics. flag variable enables convenient filtering original tibble augmentation original dataset.","code":""},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":"functions perform specific set diagnostics term anomalous values raw ion count data isotope pair. wrapper function diag_R convenient defines ion- isotope-wise statistics required diagnostics.","code":""},{"path":"https://martinschobben.github.io/point/reference/Cameca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Family of diagnostics functions for isotope count ratios — Cameca","text":"","code":"# Descriptive an predictive statistics for 13C/12C ratios (note .output # argument and remove zero count analysis) tb_R <- stat_R(real_IC, \"13C\", \"12C\", file.nm, sample.nm,                .output = \"complete\", .zero = TRUE)  # CAMECA style augmentation of ion count data for isotope ratios Cameca(tb_R, \"13C\", \"12C\", file.nm, .X = Xt.pr, .N = N.pr,        .species = species.nm, .t = t.nm, .output = \"flag\") #> # A tibble: 11,700 × 25 #>    file.nm       t.nm sample.nm bl.nm.12C bl.nm.13C Xt.pr.12C Xt.pr.13C N.pr.12C #>    <chr>        <dbl> <chr>         <int>     <int>     <dbl>     <dbl>    <dbl> #>  1 2018-01-19-…  0.54 Belemnit…         1         1    34460.      358.    12040 #>  2 2018-01-19-…  1.08 Belemnit…         1         1    34202.      341.    11950 #>  3 2018-01-19-…  1.62 Belemnit…         1         1    34632.      395.    12100 #>  4 2018-01-19-…  2.16 Belemnit…         1         1    34191.      366.    11946 #>  5 2018-01-19-…  2.7  Belemnit…         1         1    34855.      378.    12178 #>  6 2018-01-19-…  3.24 Belemnit…         1         1    34672.      369.    12114 #>  7 2018-01-19-…  3.78 Belemnit…         1         1    34766.      369.    12147 #>  8 2018-01-19-…  4.32 Belemnit…         1         1    34609.      366.    12092 #>  9 2018-01-19-…  4.86 Belemnit…         1         1    34414.      406.    12024 #> 10 2018-01-19-…  5.4  Belemnit…         1         1    34474.      409.    12045 #> # … with 11,690 more rows, and 17 more variables: N.pr.13C <dbl>, #> #   n_R_t.nm <int>, M_R_Xt.pr <dbl>, S_R_Xt.pr <dbl>, RS_R_Xt.pr <dbl>, #> #   SeM_R_Xt.pr <dbl>, RSeM_R_Xt.pr <dbl>, hat_S_R_N.pr <dbl>, #> #   hat_RS_R_N.pr <dbl>, hat_SeM_R_N.pr <dbl>, hat_RSeM_R_N.pr <dbl>, #> #   chi2_R_N.pr <dbl>, R_Xt.pr <dbl>, ratio.nm <chr>, hat_s_R_Xt.pr <dbl>, #> #   hat_Xt.pr.13C <dbl>, flag <fct>"},{"path":"https://martinschobben.github.io/point/reference/ICdir_chk.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if directory is suitable for point — ICdir_chk","title":"Check if directory is suitable for point — ICdir_chk","text":"function checks whether necessary files `point` read functions included directory.","code":""},{"path":"https://martinschobben.github.io/point/reference/ICdir_chk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if directory is suitable for point — ICdir_chk","text":"","code":"ICdir_chk(directory, types = c(\"is_txt\", \"chk_is\", \"stat\"))"},{"path":"https://martinschobben.github.io/point/reference/ICdir_chk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if directory is suitable for point — ICdir_chk","text":"directory path connection directory containing raw ion count data files. types Regular expression required file extensions. Default searches files ending .is_txt, .chk_is, .stat","code":""},{"path":"https://martinschobben.github.io/point/reference/ICdir_chk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if directory is suitable for point — ICdir_chk","text":"logical indicating whether directory suitable `point`","code":""},{"path":"https://martinschobben.github.io/point/reference/ICdir_chk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if directory is suitable for point — ICdir_chk","text":"","code":"ICdir_chk(point_example(\"2018-01-19-GLENDON\")) #> $chk_is #>                                                                                                                       2018-01-19-GLENDON_1_1  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_1.chk_is\"  #>                                                                                                                       2018-01-19-GLENDON_1_2  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_2.chk_is\"  #>                                                                                                                       2018-01-19-GLENDON_1_3  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_3.chk_is\"  #>  #> $is_txt #>                                                                                                                       2018-01-19-GLENDON_1_1  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_1.is_txt\"  #>                                                                                                                       2018-01-19-GLENDON_1_2  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_2.is_txt\"  #>                                                                                                                       2018-01-19-GLENDON_1_3  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_3.is_txt\"  #>  #> $stat #>                                                                                                                     2018-01-19-GLENDON_1_1  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_1.stat\"  #>                                                                                                                     2018-01-19-GLENDON_1_2  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_2.stat\"  #>                                                                                                                     2018-01-19-GLENDON_1_3  #> \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON/2018-01-19-GLENDON_1_3.stat\"  #>"},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":null,"dir":"Reference","previous_headings":"","what":"QSA test — QSA_test","title":"QSA test — QSA_test","text":"QSA_test function test QSA.","code":""},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QSA test — QSA_test","text":"","code":"QSA_test(   .IC,   .ion1,   .ion2,   ...,   .nest = NULL,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .plot = TRUE )"},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QSA test — QSA_test","text":".IC tibble containing processed ion count data. .ion1 character string constituting heavy isotope (\"13C\"). .ion2 character string constituting light isotope (\"12C\"). ... Variables grouping. .nest variable hat identifies series analyses calculate significance QSA. .X variable constituting ion count rate (defaults variables generated read_IC().) .N variable constituting ion counts (defaults variables generated read_IC().). .species variable constituting species analysed (defaults variables generated read_IC().). .t variable constituting time analyses (defaults variables generated read_IC().). .plot Currently supported.","code":""},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QSA test — QSA_test","text":"tibble::tibble() containing original dataset adds variables: beta, t_QSA, p_QSA summarise results linear model fitted OLS (respectively; slope associated student's t test statistic p value) ion count rates common isotope (predictor) isotope ratio (dependent variable). p value beta different zero. .","code":""},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"QSA test — QSA_test","text":"accuracy pulsed ion counting influenced systematic errors depend ion counting system. Quasi simultaneous arrival one potential errors can also impact isotope ratios.","code":""},{"path":"https://martinschobben.github.io/point/reference/QSA_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QSA test — QSA_test","text":"","code":"# Use point_example() to access the examples bundled with this package  # raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\")) #> Registered S3 methods overwritten by 'readr': #>   method                    from  #>   as.data.frame.spec_tbl_df vroom #>   as_tibble.spec_tbl_df     vroom #>   format.col_spec           vroom #>   print.col_spec            vroom #>   print.collector           vroom #>   print.date_names          vroom #>   print.locale              vroom #>   str.col_spec              vroom  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # QSA test QSA_test(tb_pr, \"13C\", \"12C\", file.nm) #> # A tibble: 11,700 × 12 #>    file.nm    t.nm Xt.pr.12C Xt.pr.13C N.pr.12C N.pr.13C R_Xt.pr alpha_Xt.pr.12C #>    <chr>     <dbl>     <dbl>     <dbl>    <dbl>    <dbl>   <dbl>           <dbl> #>  1 2018-01-…  0.54    34460.      358.    12040      125 0.0104           0.0114 #>  2 2018-01-…  1.08    34202.      341.    11950      119 0.00996          0.0114 #>  3 2018-01-…  1.62    34632.      395.    12100      138 0.0114           0.0114 #>  4 2018-01-…  2.16    34191.      366.    11946      128 0.0107           0.0114 #>  5 2018-01-…  2.7     34855.      378.    12178      132 0.0108           0.0114 #>  6 2018-01-…  3.24    34672.      369.    12114      129 0.0106           0.0114 #>  7 2018-01-…  3.78    34766.      369.    12147      129 0.0106           0.0114 #>  8 2018-01-…  4.32    34609.      366.    12092      128 0.0106           0.0114 #>  9 2018-01-…  4.86    34414.      406.    12024      142 0.0118           0.0114 #> 10 2018-01-…  5.4     34474.      409.    12045      143 0.0119           0.0114 #> # … with 11,690 more rows, and 4 more variables: beta_Xt.pr.12C <dbl>, #> #   t_Xt.pr.12C <dbl>, p_Xt.pr.12C <dbl>, delta_Xt.pr.12C <dbl>"},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibration of isotope ratios — calib_R","title":"Calibration of isotope ratios — calib_R","text":"calib_R function convert isotope values back--forth R delta","code":""},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibration of isotope ratios — calib_R","text":"","code":"calib_R(   x,   reference,   isotope,   type = \"composition\",   input = \"R\",   output = \"F\",   y = NULL )"},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibration of isotope ratios — calib_R","text":"x numeric value vector. reference character numeric value vector. isotope character name isotope (e.g. \"13C\"). type Type conversion, isotope composition enrichment. input type input value, R, F, delta. output Desired output value, R, F, delta. y numeric value vector product calculating enrichment factors, following convention; x = R(product)/ y = R(substrate). x y notation, either R, F delta, supplied argument input.","code":""},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibration of isotope ratios — calib_R","text":"numeric value vector.","code":""},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibration of isotope ratios — calib_R","text":"fundamental publishing isotope data conversion isotope delta formulation comparing obtained R standard. values reported per mill scale. However IC calculations ratios (R) fractional abundances (F) commonly used. functions provide easy way making transformations average composition also fractionations enrichment factors (alpha epsilon).","code":""},{"path":"https://martinschobben.github.io/point/reference/calib_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibration of isotope ratios — calib_R","text":"","code":"# R value of 0.0111 to delta on VPDB scale calib_R(0.0111, reference = 0.011237, type = \"composition\", input = \"R\",         output = \"delta\") #> [1] -12.19187 # or calib_R(0.0111, reference = \"VPDB\", isotope = \"13C\",         type = \"composition\", input = \"R\", output = \"delta\") #> [1] -12.19187  # Fractional abundance for a given R calib_R(0.0111, reference = 0.011237, type = \"composition\",         input = \"R\", output = \"F\") #> [1] 0.01097814  # Alpha enrichment factors can also be calculated based on two delta/R/F # values, where the second value can be supplied as argument y (i.e., # the product of a reaction) calib_R(-25, reference = \"VPDB\", isotope = \"13C\",         type = \"enrichment\", input = \"delta\", output = \"alpha\", y = -105) #> [1] 0.9179487"},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference Cameca R statistics — cameca_stat_R","title":"Reference Cameca R statistics — cameca_stat_R","text":"ion count ratio statistics performed Cameca software. ion counts corrected systematic offsets EM detection devices.","code":""},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference Cameca R statistics — cameca_stat_R","text":"","code":"cameca_stat_R"},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_R.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reference Cameca R statistics — cameca_stat_R","text":"data frame 54.000 rows 11 variables: file.nm name original file correction block systematic corrections (named blocks Cameca   output) Ratio# ion mass ratio according number detection device Ratios Ion count ratio (R) Err_Poisson(%) Predicted standard error mean (percent) Err_mean(%) Standard error mean (percent) Khi2 Reduced chi-squared SD_Block(%) Block-wise standard deviation R","code":""},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference Cameca X statistics — cameca_stat_X","title":"Reference Cameca X statistics — cameca_stat_X","text":"single ion count statistics performed Cameca software. ion counts corrected systematic offsets EM detection devices","code":""},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference Cameca X statistics — cameca_stat_X","text":"","code":"cameca_stat_X"},{"path":"https://martinschobben.github.io/point/reference/cameca_stat_X.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reference Cameca X statistics — cameca_stat_X","text":"data frame 54.000 rows 11 variables: file.nm name original file correction block systematic corrections (named blocks Cameca   output) Mass# ion mass according number detection device Cumulated count Total ion count (N~tot~)","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Process raw ion count data — cor_IC","title":"Process raw ion count data — cor_IC","text":"cor_IC function processing ion count data.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process raw ion count data — cor_IC","text":"","code":"cor_IC(   .IC,   ...,   .N = NULL,   .t = NULL,   .bl_t = NULL,   .det = NULL,   .deadtime = NULL,   .thr_PHD = NULL,   .M_PHD = NULL,   .SD_PHD = NULL,   .hide = TRUE )"},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process raw ion count data — cor_IC","text":".IC tibble containing raw ion count data. ... Currently supported. .N variable constituting ion counts. .t variable constituting time increments. .bl_t variable numeric value blanking time (milliseconds). .det Variable character string variable detection system (\"EM\" \"FC\"). .deadtime numeric value deadtime EM system units nanoseconds. .thr_PHD numeric value discriminator threshold EM. system. .M_PHD variable numeric value mean PHD value. .SD_PHD variable numeric value standard deviation PHD value. .hide logical indicating whether processed data  returned. TRUE raw data contained attribute named \"rawdata\".","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process raw ion count data — cor_IC","text":"tibble::tibble() containing  original dataset adds variables: Xt.rw, ion count rates  uncorrected detection device-specific biases; Xt.pr, ion count  rates corrected detection device-specific biases; N.pr,  counts corrected detection device-specific biases.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process raw ion count data — cor_IC","text":"accuracy pulsed ion counting influenced systematic errors depend ion counting system. Deadtime EM yield two prominent effects electron multiplier systems. deadtime refer timewindow system register counts; occurs incident ions strike EM small enough time window EM channel electronically paralysed. EM yield ratio number output pulses counted EM  discriminator threshold number ions arriving EM. latter can gauged peak height distribution (PHD) probability EM output certain voltage amplitude.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_IC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process raw ion count data — cor_IC","text":"","code":"# Use point_example() to access the examples bundled with this package  # raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"))  # Processing raw ion count data cor_IC(tb_rw) #> # A tibble: 81,900 × 5 #>    file.nm                 t.nm species.nm  Xt.pr  N.pr #>    <chr>                  <dbl> <chr>       <dbl> <dbl> #>  1 2018-01-19-GLENDON_1_1  0.54 12C        34460. 12040 #>  2 2018-01-19-GLENDON_1_1  1.08 12C        34202. 11950 #>  3 2018-01-19-GLENDON_1_1  1.62 12C        34632. 12100 #>  4 2018-01-19-GLENDON_1_1  2.16 12C        34191. 11946 #>  5 2018-01-19-GLENDON_1_1  2.7  12C        34855. 12178 #>  6 2018-01-19-GLENDON_1_1  3.24 12C        34672. 12114 #>  7 2018-01-19-GLENDON_1_1  3.78 12C        34766. 12147 #>  8 2018-01-19-GLENDON_1_1  4.32 12C        34609. 12092 #>  9 2018-01-19-GLENDON_1_1  4.86 12C        34414. 12024 #> 10 2018-01-19-GLENDON_1_1  5.4  12C        34474. 12045 #> # … with 81,890 more rows"},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct ion detection bias — cor_yield","title":"Correct ion detection bias — cor_yield","text":"cor_yield function correct counting bias related EM Yield. cor_DT function correct counting bias related deadtime","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct ion detection bias — cor_yield","text":"","code":"cor_yield(x = NULL, mean_PHD, SD_PHD, thr_PHD, output = \"ct\")  cor_DT(x, deadtime)"},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct ion detection bias — cor_yield","text":"x numeric vector containing raw ion count data. mean_PHD numeric vector containing mean PHD value. SD_PHD numeric vector containing standard deviation PHD. thr_PHD numeric value disrcriminator threshold EM system. output Character string indicating whether return corrected count rates (\"ct\") yield value (\"Y\"). deadtime numeric value dead-time EM system units nanoseconds.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct ion detection bias — cor_yield","text":"numeric vector corrected count rates.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct ion detection bias — cor_yield","text":"accuracy pulsed ion counting influenced systematic errors depend ion counting system. Deadtime EM yield two prominent effects electron multiplier systems. deadtime refer timewindow system register counts; occurs incident ions strike EM small enough time window EM channel electronically paralysed. EM yield ratio number output pulses counted EM  discriminator threshold number ions arriving EM. latter can gauged peak height distribution (PHD) probability EM output certain voltage amplitude.","code":""},{"path":"https://martinschobben.github.io/point/reference/cor_yield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct ion detection bias — cor_yield","text":"","code":"# Original count rate of a chemical species x <- 30000  # Corrected count rate for EM Yield with a threshold of 50 V cor_yield(x, mean_PHD = 210, SD_PHD = 60, thr_PHD = 50) #> [1] 30007.95  # Corrected count rate for a deadtime of 44 ns cor_DT(x, 44) #> [1] 30039.65"},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for co-variate conversion of isotope systems — cov_R","title":"Function for co-variate conversion of isotope systems — cov_R","text":"cov_R create wide format tibble isotope pair","code":""},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for co-variate conversion of isotope systems — cov_R","text":"","code":"cov_R(.IC, .ion, ..., .species = NULL, .t = NULL, .preserve = FALSE)"},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for co-variate conversion of isotope systems — cov_R","text":".IC tibble containing processed ion count data. .ion character string vector constituting ion names. ... Variables grouping. .species variable constituting species analysed. .t variable constituting time analyses. .preserve logical whether preserve ID variable.","code":""},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for co-variate conversion of isotope systems — cov_R","text":"tibble::tibble wide format","code":""},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for co-variate conversion of isotope systems — cov_R","text":"functions converts long format data frame wide format tibble isotope pair based unique identifier time measurement. data can linked combination three variable unique analyses; file name, chemical species name time increment measurement. Pay attention using combination `zeroCt()`.","code":""},{"path":"https://martinschobben.github.io/point/reference/cov_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for co-variate conversion of isotope systems — cov_R","text":"","code":"# raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"))  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # wide format cov_R(tb_pr, c(\"13C\", \"12C\"), file.nm) #> # A tibble: 11,700 × 6 #>    file.nm                 t.nm Xt.pr.12C Xt.pr.13C N.pr.12C N.pr.13C #>    <chr>                  <dbl>     <dbl>     <dbl>    <dbl>    <dbl> #>  1 2018-01-19-GLENDON_1_1  0.54    34460.      358.    12040      125 #>  2 2018-01-19-GLENDON_1_1  1.08    34202.      341.    11950      119 #>  3 2018-01-19-GLENDON_1_1  1.62    34632.      395.    12100      138 #>  4 2018-01-19-GLENDON_1_1  2.16    34191.      366.    11946      128 #>  5 2018-01-19-GLENDON_1_1  2.7     34855.      378.    12178      132 #>  6 2018-01-19-GLENDON_1_1  3.24    34672.      369.    12114      129 #>  7 2018-01-19-GLENDON_1_1  3.78    34766.      369.    12147      129 #>  8 2018-01-19-GLENDON_1_1  4.32    34609.      366.    12092      128 #>  9 2018-01-19-GLENDON_1_1  4.86    34414.      406.    12024      142 #> 10 2018-01-19-GLENDON_1_1  5.4     34474.      409.    12045      143 #> # … with 11,690 more rows"},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics isotope count data — diag_R","title":"Diagnostics isotope count data — diag_R","text":"diag_R wrapper function diagnostics isotope count data","code":""},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics isotope count data — diag_R","text":"","code":"diag_R(   .IC,   .ion1,   .ion2,   ...,   .nest = NULL,   .method = \"CooksD\",   .reps = 1,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .output = \"inference\",   .label = \"none\",   .meta = FALSE,   .alpha_level = 0.05,   .hyp = \"none\",   .plot = FALSE,   .plot_type = \"static\",   .plot_stat = NULL,   .plot_iso = FALSE,   .plot_outlier_labs = c(\"divergent\", \"confluent\"),   .mc_cores = 1 )"},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics isotope count data — diag_R","text":".IC tibble containing processed ion count data. .ion1 character string constituting rare isotope (\"13C\"). .ion2 character string constituting common isotope (\"12C\"). ... Variables grouping. .nest variable hat identifies series analyses calculate significance inter-isotope variability. .method Character string method diagnostics (default = \"CooksD\", see details). .reps Numeric setting number repeated iterations outlier detection (default = 1). .X variable constituting ion count rate (defaults variables generated read_IC()) .N variable constituting ion counts (defaults variables generated read_IC().). .species variable constituting species analysed (defaults variables generated read_IC()). .t variable constituting time analyses (defaults variables generated read_IC()). .output Can set \"complete\" returns stat_R() stat_X() statistics, diagnostics, inference test results following selected method (see argument .method); \"augmented\" augmented IC data diagnostics; \"diagnostic\" returns stat_R() stat_X() statistics outlier detection; \"outlier\" outlier detection; \"inference\" inference test statistics results (default = \"inference\"). .label printing nice latex labels use \"latex\" (default = NULL). .meta Logical whether preserve metadata attribute (defaults TRUE). .alpha_level Significance level hypothesis test. .hyp Hypothesis test appropriate selected method (default = \"none\"). .plot Logical indicating whether plot generated. .plot_type Character string determining whether returned plot \"static\" ggplot2::ggplot2()(currently supported option). .plot_stat Adds statistic label plot (e.g. . \"M\"), see point::nm_stat_R full selection statistics available. .plot_iso character string (e.g. \"VPDB\") delta conversion R (see ?calib_R() options). .plot_outlier_labs character vector length two colourbar text outliers (default = c(\"divergent\", \"confluent\")). .mc_cores Number workers parallel execution (work Windows).","code":""},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics isotope count data — diag_R","text":"ggplot2::ggplot() returned  (.plot = TRUE) along tibble::tibble() can contain statistics  diagnostics, hypothesis test results associated chosen method  depending argument .output.","code":""},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostics isotope count data — diag_R","text":"diag_R function performs internal call stat_R perform diagnostics influence individual measurements block-wise global (.e., complete analysis) statistics. identifies potentially influential measurements indicate heterogeneity analytical substrate measurement. See vignette(\"IC-diagnostics\", package = \"point\") information use function, possible methods outlier detection. Options \"CooksD\" (default), \"Cameca\", \"Rm\", \"norm_E\", \"CV\", \"IR\", \"QQ\", see vignette(\"IC-diagnostics\", package = \"point\") examples point::names_plot. argument .output can used toggle \"complete\"; returning stat_R() stat_X() statistics, diagnostics, inference test results, \"augmented\"; returning augmented IC removing outliers, \"diagnostic\"; outlier detection results; \"diagnostic\"; statistics outlier detection, \"inference\"; returns inference test statistics results (default = inference).","code":""},{"path":"https://martinschobben.github.io/point/reference/diag_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics isotope count data — diag_R","text":"","code":"# Modelled ion count dataset # Cook's D style diagnostic-augmentation of ion count data for # isotope ratios diag_R(simu_IC, \"13C\", \"12C\", type.nm, spot.nm, .plot = TRUE)  #> # A tibble: 9 × 7 #>   execution type.nm    spot.nm ratio.nm M_R_Xt.pr F_R_Xt.pr p_R_Xt.pr #>       <dbl> <chr>        <int> <chr>        <dbl>     <dbl>     <dbl> #> 1         1 symmetric        1 13C/12C     0.0110   105.     2.00e-64 #> 2         1 symmetric        2 13C/12C     0.0110   127.     2.81e-77 #> 3         1 symmetric        3 13C/12C     0.0110   122.     1.42e-74 #> 4         1 asymmetric       1 13C/12C     0.0111    63.2    1.28e-39 #> 5         1 asymmetric       2 13C/12C     0.0111    74.9    1.09e-46 #> 6         1 asymmetric       3 13C/12C     0.0111    71.9    6.70e-45 #> 7         1 ideal            1 13C/12C     0.0112     0.267  8.49e- 1 #> 8         1 ideal            2 13C/12C     0.0112     0.219  8.83e- 1 #> 9         1 ideal            3 13C/12C     0.0112     1.73   1.59e- 1"},{"path":"https://martinschobben.github.io/point/reference/eval_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate effect size and significance of outliers on R — eval_diag","title":"Evaluate effect size and significance of outliers on R — eval_diag","text":"eval_diag function evaluation effect size significance outliers R detected diagnostics, Cook's D sigma rejection (Cameca default method).","code":""},{"path":"https://martinschobben.github.io/point/reference/eval_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate effect size and significance of outliers on R — eval_diag","text":"","code":"eval_diag(   .IC,   .ion1,   .ion2,   ...,   .nest = NULL,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .flag = NULL,   .execution = NULL,   .output = \"inference\",   .tf = \"ppt\",   .label = \"none\",   .meta = FALSE,   .mc_cores = 1 )"},{"path":"https://martinschobben.github.io/point/reference/eval_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate effect size and significance of outliers on R — eval_diag","text":".IC tibble containing ion count data diagnostics generated diag_R(), minimum outlier flag variable required. .ion1 character string constituting rare isotope (e.g. \"13C\"). .ion2 character string constituting common isotope (e.g. \"12C\"). ... Variables grouping. .nest variable hat identifies series analyses calculate significance inter-isotope variability. .X variable constituting ion count rate (defaults variables generated read_IC()) .N variable constituting ion counts (defaults variables generated read_IC().). .species variable constituting species analysed (defaults variables generated read_IC()). .t variable constituting time analyses (defaults variables generated read_IC()). .flag variable constituting outlier flag (defaults variables generated diag_R()). .execution variable constituting iterative cycles diagnostics (defaults variables generated diag_R()). .output character string output summary statistics (\"inference\") statistics original data (\"complete\"). .tf Variable transformation parts per thousand (\"ppt\") log (\"log\") mixed linear model application. .label character string indicating whether variable names latex (\"latex\") webtex (\"webtex\") compatible. extended future default = NULL. .meta Logical whether preserve metadata attribute (defaults TRUE). .mc_cores Number workers parallel execution (work Windows).","code":""},{"path":"https://martinschobben.github.io/point/reference/eval_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate effect size and significance of outliers on R — eval_diag","text":"tibble::tibble() model output.  See point::names_model information model results.","code":""},{"path":"https://martinschobben.github.io/point/reference/eval_diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate effect size and significance of outliers on R — eval_diag","text":"","code":"# Simulated IC data tb_dia <- diag_R(simu_IC, \"13C\", \"12C\", type.nm, spot.nm,                  .output = \"diagnostic\")  # Evaluate significance and effect of outliers based on Cook's D eval_diag(tb_dia, \"13C\", \"12C\", type.nm, spot.nm, .nest = type.nm,           .X = Xt.pr, .N = N.pr, .species = species.nm, .t = t.nm) #> # A tibble: 9 × 11 #>   execution type.nm    spot.nm ratio.nm M_R_Xt.pr F_R_Xt.pr p_R_Xt.pr #>       <dbl> <chr>        <int> <chr>        <dbl>     <dbl>     <dbl> #> 1         1 symmetric        1 13C/12C     0.0110   105.     2.00e-64 #> 2         1 symmetric        2 13C/12C     0.0110   127.     2.81e-77 #> 3         1 symmetric        3 13C/12C     0.0110   122.     1.42e-74 #> 4         1 asymmetric       1 13C/12C     0.0111    63.2    1.28e-39 #> 5         1 asymmetric       2 13C/12C     0.0111    74.9    1.09e-46 #> 6         1 asymmetric       3 13C/12C     0.0111    71.9    6.70e-45 #> 7         1 ideal            1 13C/12C     0.0112     0.267  8.49e- 1 #> 8         1 ideal            2 13C/12C     0.0112     0.219  8.83e- 1 #> 9         1 ideal            3 13C/12C     0.0112     1.73   1.59e- 1 #> # … with 4 more variables: hat_M_M_R_Xt.pr <dbl>, hat_RS_M_R_Xt.pr <dbl>, #> #   dAIC_M_R_Xt.pr <dbl>, p_M_R_Xt.pr <dbl>"},{"path":"https://martinschobben.github.io/point/reference/formula_parser.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear model parser — formula_parser","title":"Linear model parser — formula_parser","text":"Linear model parser","code":""},{"path":"https://martinschobben.github.io/point/reference/formula_parser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear model parser — formula_parser","text":"","code":"formula_parser(   data,   arg1,   arg2,   flag = NULL,   transformation = NULL,   nest = NULL,   type = \"OLS\",   execute = TRUE )"},{"path":"https://martinschobben.github.io/point/reference/formula_parser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear model parser — formula_parser","text":"data ion count data. arg1 quosure outcome variable. arg2 quosure predictor variable. flag quosure nominal predictor variable outliers. transformation transformation predictor (\"log\" \"ppt\" dividing thousand). nest quosure nest variable mixed effect moddeling variable nesting structure. type type model fitting (ratio method (RM), ordinary least squares (OLS), generalized least squares (GLS), special case Quasi Simultaneous Arrival estimate (QSA) linear mixed effects (LME). execute either evaluate return expression.","code":""},{"path":"https://martinschobben.github.io/point/reference/formula_parser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear model parser — formula_parser","text":"call evaluated call context data.","code":""},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical species names for plots and tables — ion_labeller","title":"Chemical species names for plots and tables — ion_labeller","text":"ion_labeller R_labeller converts character string containing chemical species names latex string expression. stat_labeller function generates labels statistics tables (latex) plots (expressions).","code":""},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemical species names for plots and tables — ion_labeller","text":"","code":"ion_labeller(ion, label = \"latex\")  R_labeller(ion1, ion2, label = \"latex\")  stat_labeller(var, org, stat, value, label = \"latex\")"},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chemical species names for plots and tables — ion_labeller","text":"ion chemical species character string label Character string indicating whether output \"latex\" expression (\"expr\"). ion1 chemical species character string (isotope ratios rare isotope). ion2 chemical species character string (isotope ratios common isotope). var character string variable, either \"X\" single ions \"R\" ion ratios. org character string origin derived variable, e.g., R. stat character string statistic following convention e.g. point::names_stat_X. value numeric value statistic result.","code":""},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chemical species names for plots and tables — ion_labeller","text":"character string parsable Latex expression usage plots.","code":""},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chemical species names for plots and tables — ion_labeller","text":"functions converts chemical species names form, e.g. `\"12C\"`, `\"13C2\"`, `\"12C 14N\"`, `\"12C-14N\"` character string can parsed Latex species names appropriate superscripts th left mass subscripts index right.","code":""},{"path":"https://martinschobben.github.io/point/reference/ion_labeller.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chemical species names for plots and tables — ion_labeller","text":"","code":"# plot some ion count data library(ggplot2) ggplot() +  geom_blank() +  ylab(ion_labeller(\"12C2-40Ca\", \"expr\")) +  xlab(R_labeller(\"12C2-40Ca\", \"13C2-40Ca\", \"expr\"))"},{"path":"https://martinschobben.github.io/point/reference/names_cameca.html","id":null,"dir":"Reference","previous_headings":"","what":"The data associated with Cameca NanoSIMS 50L — names_cameca","title":"The data associated with Cameca NanoSIMS 50L — names_cameca","text":"dataset containing original point variable names Cameca NanoSIMS 50L meta-data used point::read_IC().","code":""},{"path":"https://martinschobben.github.io/point/reference/names_cameca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The data associated with Cameca NanoSIMS 50L — names_cameca","text":"","code":"names_cameca"},{"path":"https://martinschobben.github.io/point/reference/names_cameca.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The data associated with Cameca NanoSIMS 50L — names_cameca","text":"data frame 48 rows 5 variables: point variable names generated point::read_IC() argument argument names point use usage point package cameca names Cameca NanoSIMS 50L meta-data point measurement extension Cameca file extension format format data Cameca file definition definitions variables","code":""},{"path":"https://martinschobben.github.io/point/reference/names_cameca.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The data associated with Cameca NanoSIMS 50L — names_cameca","text":"point::read_IC()","code":""},{"path":"https://martinschobben.github.io/point/reference/names_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The regression model names associated with\npoint::diag_R() — names_model","title":"The regression model names associated with\npoint::diag_R() — names_model","text":"dataset containing specifications producing variable names latex parsable labels printing Rmarkdown well details statistics output procedure finding best fitting curve.","code":""},{"path":"https://martinschobben.github.io/point/reference/names_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The regression model names associated with\npoint::diag_R() — names_model","text":"","code":"names_model"},{"path":"https://martinschobben.github.io/point/reference/names_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The regression model names associated with\npoint::diag_R() — names_model","text":"data frame 7 rows 4 variables: name statistic name derived variable name type type curve fitting label description statistic","code":""},{"path":"https://martinschobben.github.io/point/reference/names_model.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The regression model names associated with\npoint::diag_R() — names_model","text":"point::diag_R()","code":""},{"path":"https://martinschobben.github.io/point/reference/names_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"The plot types for diagnostic tests available in point — names_plot","title":"The plot types for diagnostic tests available in point — names_plot","text":"dataset containing names attributes plots diagnostic test point","code":""},{"path":"https://martinschobben.github.io/point/reference/names_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The plot types for diagnostic tests available in point — names_plot","text":"","code":"names_plot"},{"path":"https://martinschobben.github.io/point/reference/names_plot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The plot types for diagnostic tests available in point — names_plot","text":"data frame 9 rows 5 variables: name name diagnostic test inference type inference test: package internal external label plot title xaxis plot xaxis title yaxis plot yaxis title","code":""},{"path":"https://martinschobben.github.io/point/reference/names_plot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The plot types for diagnostic tests available in point — names_plot","text":"point::diag_R()","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_R.html","id":null,"dir":"Reference","previous_headings":"","what":"The statistics associated with\npoint::stat_R() — names_stat_R","title":"The statistics associated with\npoint::stat_R() — names_stat_R","text":"dataset containing specifications producing variable names latex parsable labels printing Rmarkdown well details statistics available point::stat_R().","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The statistics associated with\npoint::stat_R() — names_stat_R","text":"","code":"names_stat_R"},{"path":"https://martinschobben.github.io/point/reference/names_stat_R.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The statistics associated with\npoint::stat_R() — names_stat_R","text":"data frame 10 rows 3 variables: name statistic name derived variable name origin variable name transformation (ratio) label description statistic","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_R.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The statistics associated with\npoint::stat_R() — names_stat_R","text":"point::stat_R()","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_X.html","id":null,"dir":"Reference","previous_headings":"","what":"The statistics associated with\npoint::stat_X() — names_stat_X","title":"The statistics associated with\npoint::stat_X() — names_stat_X","text":"dataset containing specifications producing variable names latex parsable labels printing Rmarkdown well details statistics available point::stat_X().","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The statistics associated with\npoint::stat_X() — names_stat_X","text":"","code":"names_stat_X"},{"path":"https://martinschobben.github.io/point/reference/names_stat_X.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The statistics associated with\npoint::stat_X() — names_stat_X","text":"data frame 10 rows 3 variables: name statistic name derived variable name label description statistic","code":""},{"path":"https://martinschobben.github.io/point/reference/names_stat_X.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The statistics associated with\npoint::stat_X() — names_stat_X","text":"point::stat_X()","code":""},{"path":"https://martinschobben.github.io/point/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://martinschobben.github.io/point/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://martinschobben.github.io/point/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://martinschobben.github.io/point/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://martinschobben.github.io/point/reference/point.html","id":null,"dir":"Reference","previous_headings":"","what":"point: A package for reading, processing, and analysing raw ion count data. — point","title":"point: A package for reading, processing, and analysing raw ion count data. — point","text":"point package provides function reading processing analysing pulsed ion count data.","code":""},{"path":"https://martinschobben.github.io/point/reference/point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"point: A package for reading, processing, and analysing raw ion count data. — point","text":"point functions provide convenient way work evaluate pulsed ion count data. read_* functions can load collate raw ion count data tibble::tibble(). Systematic biases introduced ion detection devices can corrected cor_* functions. precision ion count data can checked stat_* functions. diag_* functions provide convenient way measure influence individual measurements (N) n-series measurements (analysis).","code":""},{"path":"https://martinschobben.github.io/point/reference/point_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to point example — point_example","title":"Get path to point example — point_example","text":"function comes package `readr`, modified access bundled datasets directory `inst/extdata` `point`. function make easy access. function modified readr_example package readr.","code":""},{"path":"https://martinschobben.github.io/point/reference/point_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to point example — point_example","text":"","code":"point_example(path = NULL)"},{"path":"https://martinschobben.github.io/point/reference/point_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to point example — point_example","text":"path Name file. `NULL`, example files listed.","code":""},{"path":"https://martinschobben.github.io/point/reference/point_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to point example — point_example","text":"","code":"point_example() #> [1] \"2018-01-19-GLENDON\" point_example(\"2018-01-19-GLENDON\") #> [1] \"/home/runner/.cache/R/renv/library/point-ffcd8613/R-4.2/x86_64-pc-linux-gnu/point/extdata/2018-01-19-GLENDON\""},{"path":"https://martinschobben.github.io/point/reference/predict_ionize.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting trends in ionization efficiency — predict_ionize","title":"Predicting trends in ionization efficiency — predict_ionize","text":"Fluctuations electronics, development sputter pit geometry analysed substrate can cause trends fluctuations secondary ion current. function attempts accommodate global trend ionization trend application GAM model. nested variant can used gauge whether set analyses likely originate homogeneous substrate level individual analysis.","code":""},{"path":"https://martinschobben.github.io/point/reference/predict_ionize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicting trends in ionization efficiency — predict_ionize","text":"","code":"predict_ionize(   .IC,   ...,   .nest = NULL,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .bl_t = NULL,   .plot = TRUE,   .method = \"median\",   .hide = TRUE )"},{"path":"https://martinschobben.github.io/point/reference/predict_ionize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicting trends in ionization efficiency — predict_ionize","text":".IC tibble containing raw ion count data. ... Variables grouping. .nest variable identifying groups analyses indicates whether nested mixed GAM model applied. .X variable constituting ion count rate. .N variable constituting ion counts. .species variable constituting species analysed. .t variable constituting time increments. .bl_t variable constituting blanking time. .plot Logical indicating whether plot ion trends .method Method calculating de-trended single ion counts .hide logical indicating whether processed data returned. TRUE model parameters contained attribute named \"modeldata\".","code":""},{"path":"https://martinschobben.github.io/point/reference/predict_ionize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicting trends in ionization efficiency — predict_ionize","text":"","code":"# remove zero count analysis tb_0 <- zeroCt(real_IC, \"12C\", \"40Ca 16O\", sample.nm, file.nm, .warn = FALSE)  # predict ionization trends if (FALSE) predict_ionize(tb_0, file.nm)"},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Read raw ion count data — read_IC","title":"Read raw ion count data — read_IC","text":"read_IC() designed obtain numerical data associated ion counts minimal set meta-data. read_meta() can used specifically retrieve meta date associated ion count data analysis, thereby loading specifications related optics, primary secondary ion beams, mass spectrometer.","code":""},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read raw ion count data — read_IC","text":"","code":"read_IC(directory, meta = FALSE, hide = TRUE)  read_meta(directory)"},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read raw ion count data — read_IC","text":"directory path connection directory containing raw ion count data txt  files. meta Logical indicating whether include full meta-data. hide Logical indicating whether metadata included columns FALSE attribute tibble TRUE.","code":""},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read raw ion count data — read_IC","text":"tibble::tibble containing raw ion count data metadata.","code":""},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read raw ion count data — read_IC","text":"Ion count data consists time-incremented integer values. functions currently supported data generated NanoSIMS50L. Raw ion count data accompanying extracted collated single tibble text files extensions .is_txt .chk_is .stat, respectively. files can found directories associated SIMS measurements.","code":""},{"path":"https://martinschobben.github.io/point/reference/read_IC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read raw ion count data — read_IC","text":"","code":"# Use point_example() to access the examples bundled with this package  read_IC(point_example(\"2018-01-19-GLENDON\")) #> # A tibble: 81,900 × 4 #>    file.nm                 t.nm  N.rw species.nm #>    <chr>                  <dbl> <dbl> <chr>      #>  1 2018-01-19-GLENDON_1_1  0.54 12040 12C        #>  2 2018-01-19-GLENDON_1_1  1.08 11950 12C        #>  3 2018-01-19-GLENDON_1_1  1.62 12100 12C        #>  4 2018-01-19-GLENDON_1_1  2.16 11946 12C        #>  5 2018-01-19-GLENDON_1_1  2.7  12178 12C        #>  6 2018-01-19-GLENDON_1_1  3.24 12114 12C        #>  7 2018-01-19-GLENDON_1_1  3.78 12147 12C        #>  8 2018-01-19-GLENDON_1_1  4.32 12092 12C        #>  9 2018-01-19-GLENDON_1_1  4.86 12024 12C        #> 10 2018-01-19-GLENDON_1_1  5.4  12045 12C        #> # … with 81,890 more rows"},{"path":"https://martinschobben.github.io/point/reference/real_IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Real ion count dataset — real_IC","title":"Real ion count dataset — real_IC","text":"dataset generated Cameca NanoSIMS 50L Department Earth Sciences Utrecht University. material -house reference (belemnite rostra) used check repeatability/external reproducibility. Ion detection 7 individual species performed solely electron multipliers (EM) main purpose producing stable carbon isotope ratios (^13^C/^12^C).","code":""},{"path":"https://martinschobben.github.io/point/reference/real_IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real ion count dataset — real_IC","text":"","code":"real_IC"},{"path":"https://martinschobben.github.io/point/reference/real_IC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Real ion count dataset — real_IC","text":"data frame 54.000 rows 11 variables: file.nm name original file t.nm time increments (seconds) species.nm ion species name sample.nm sample substrate name bl.nm count block number Xt.pr processed ion count rate N.pr processed ion count","code":""},{"path":"https://martinschobben.github.io/point/reference/reference_R.html","id":null,"dir":"Reference","previous_headings":"","what":"The reference materials used for common isotope systems after the\nUSGS) — reference_R","title":"The reference materials used for common isotope systems after the\nUSGS) — reference_R","text":"dataset containing reference materials assigned values calibrating isotope systems. values used point::calib_R().","code":""},{"path":"https://martinschobben.github.io/point/reference/reference_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The reference materials used for common isotope systems after the\nUSGS) — reference_R","text":"","code":"reference_R"},{"path":"https://martinschobben.github.io/point/reference/reference_R.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The reference materials used for common isotope systems after the\nUSGS) — reference_R","text":"data frame 10 rows 4 variables: isotope name rare isotope ratio isotope ratio reference name reference material value value refrence material","code":""},{"path":"https://martinschobben.github.io/point/reference/reference_R.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The reference materials used for common isotope systems after the\nUSGS) — reference_R","text":"<https://wwwrcamnl.wr.usgs.gov/isoig/isopubs/itchch2.html>","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated ion count dataset — simu_IC","title":"Simulated ion count dataset — simu_IC","text":"dataset containing simulated ion count ratios intra-isotope variance (\"ideal\"), intra-isotope variability following asymmetric offset symmetric gradient. simulated dataset 60 per mille offset 13C/12C (VPDB-scale) case heterogeneous isotopic composition. done function point::simu_R().","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated ion count dataset — simu_IC","text":"","code":"simu_IC"},{"path":"https://martinschobben.github.io/point/reference/simu_IC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated ion count dataset — simu_IC","text":"data frame 54.000 rows 11 variables: type.nm name scenario isotopic variance: ideal, asymmetric symmetric trend.nm ionization efficiency trend base.nm main isotopic composition force.nm isotope anomoly t.nm time increments bl.nm count block number n.rw number observation per analysis spot.nm hypothetical spot number, .e. individual analysis species.nm ion species name N.pr processed ion count Xt.pr processed ion count rate","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_IC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated ion count dataset — simu_IC","text":"point::simu_R()","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate ion count data — simu_R","title":"Simulate ion count data — simu_R","text":"Simulate ion count data","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate ion count data — simu_R","text":"","code":"simu_R(   .sys,   .type,   .ion1,   .ion2,   .reference,   .seed,   .n = 3000,   .N = 1e+06,   .bl = 50,   .reps = 1,   .baseR = 0,   .devR = 0,   ... )"},{"path":"https://martinschobben.github.io/point/reference/simu_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate ion count data — simu_R","text":".sys Systematic variation caused ionization fluctuations relative standard deviation major ion per mille .type Character string select type simulation \"symmetric\", \"asymmetric\" \"ideal\", former two types introduce offset caused deviation R. .ion1 character string constituting heavy isotope (\"13C\"). .ion2 character string constituting light isotope (\"12C\"). .reference Character string conversion delta values R (.e.g. VPDB; see ?calib_R() information). .seed Numeric sees reproducibility generated data. .n Numeric number measurements. .N Numeric total ion count light isotope. .bl Numeric block number. .reps Multiplication procedure (e.g. effectively generating multiple analyses). .baseR Numeric baseline isotope value delta notation per mille. .devR Numeric deviation (forcing) away baseline delta notation per mille. ... supported currently","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate ion count data — simu_R","text":"Tibble simulated ion count data.D","code":""},{"path":"https://martinschobben.github.io/point/reference/simu_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate ion count data — simu_R","text":"","code":"# Gradient in 13C/12C over measurement transect simu_R(50, \"symmetric\", \"13C\", \"12C\", \"VPDB\", 1) #> # A tibble: 6,000 × 11 #>    type.nm  trend.nm base.nm force.nm  t.nm bl.nm  n.rw spot.nm species.nm  N.sm #>    <chr>       <dbl>   <dbl>    <dbl> <int> <int> <dbl>   <int> <chr>      <dbl> #>  1 symmetr…       50       0        0     1     1  3000       1 13C          234 #>  2 symmetr…       50       0        0     1     1  3000       1 12C        22279 #>  3 symmetr…       50       0        0     2     1  3000       1 13C          236 #>  4 symmetr…       50       0        0     2     1  3000       1 12C        22287 #>  5 symmetr…       50       0        0     3     1  3000       1 13C          286 #>  6 symmetr…       50       0        0     3     1  3000       1 12C        22234 #>  7 symmetr…       50       0        0     4     1  3000       1 13C          237 #>  8 symmetr…       50       0        0     4     1  3000       1 12C        22249 #>  9 symmetr…       50       0        0     5     1  3000       1 13C          240 #> 10 symmetr…       50       0        0     5     1  3000       1 12C        22026 #> # … with 5,990 more rows, and 1 more variable: Xt.sm <dbl>"},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":null,"dir":"Reference","previous_headings":"","what":"Propagation of errors for isotope ratios — stat_SDprop","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"stat_SDprop function propagation descriptive predictive (Poisson) error statistics isotope ratios (R).","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"","code":"stat_SDprop(ion1, ion2, type = \"sd\", predicted = FALSE)"},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"ion1 numeric vector constituting single ion count rate heavy isotope argument predicted set FALSE, otherwise counts required. ion2 numeric vector constituting single ion count rate light isotope argument predicted set FALSE, otherwise counts required. type character string type uncertainty estimate: \"sd\", standard deviation; \"rsd\", relative standard deviation per mille; \"se\", standard error mean; \"rse\", relative standard error mean per mille. predicted Logical indicating whether sd descriptive FALSE, based predicted Poisson value TRUE.","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"numeric vector containing propagated uncertainty isotope ratio.","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"Isotope ratios based two measured variables, .e., two isotopes single chemical species. combined variable compounds uncertainty associated individual measurement. Hence error propagation required obtain reliable estimate uncertainty associated compounded variable (.e. isotope ratio).","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_SDprop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Propagation of errors for isotope ratios — stat_SDprop","text":"","code":"# Light isotope count rates `32S` <- c(22318.19, 22151.20, 22429.52, 22143.78, 22574.25, 22455.50)  # Heavy isotope count rate `34S` <- c(231.4838, 220.3725, 255.5584, 237.0395, 244.4471, 238.8914)  # Propagation stat_SDprop(`34S`, `32S`, \"rse\") #> [1] 18.41454"},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse raw ion count data — stat_X","title":"Analyse raw ion count data — stat_X","text":"stat_X function descriptive predictive statistics single  ion precision. stat_R function descriptive predictive statistics isotope  ratios (R) precision appropriate error propagation.","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyse raw ion count data — stat_X","text":"","code":"stat_X(   .IC,   ...,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .stat = point::names_stat_X$name,   .label = \"none\",   .meta = FALSE,   .output = \"sum\" )  stat_R(   .IC,   .ion1,   .ion2,   ...,   .nest = NULL,   .X = NULL,   .N = NULL,   .species = NULL,   .t = NULL,   .stat = point::names_stat_R$name,   .label = \"none\",   .output = \"sum\",   .zero = FALSE )"},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyse raw ion count data — stat_X","text":".IC tibble containing processed ion count data. ... Variables grouping. .X variable constituting ion count rate (defaults variables generated read_IC().) .N variable constituting ion counts (defaults variables generated read_IC().). .species variable constituting species analysed (defaults variables generated read_IC().). .t variable constituting time analyses (defaults variables generated read_IC().). .stat Select statistics (e.g. c(\"M\", \"RS\"), see tables point::names_stat_X point::names_stat_R full selection statistics available (default uses statistic transformations). .label character string indicating whether variable names latex (\"latex\") webtex (\"webtex\") compatible. extended future default = NULL. .meta Logical whether preserve metadata attribute (defaults TRUE). .output character string output summary statistics (\"sum\"); statistics (\"stat\"); statistics original data (\"complete\") default = \"sum\". .ion1 character string constituting heavy isotope (\"13C\"). .ion2 character string constituting light isotope (\"12C\"). .nest variable hat identifies series analyses calculate external precision. .zero character string determines whether analyses zero count measurements removed calculations.","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyse raw ion count data — stat_X","text":"tibble::tibble containing descriptive  predictive statistics ion counts isotope ratios. naming  convention depends argument latex; set FALSE,  variable names concerning statistics consist abbreviation pasted  together input variable names Xt.","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyse raw ion count data — stat_X","text":"functions convenient wrapper calculate statistics pertaining precision pulsed ion count data (e.g. secondary ion mass spectrometry). statistics can either calculated single ions isotope ratios, include observed predicted (Poisson) statistics. Calculations isotope ratios include proper error propagation. information usage well mathematics behind functions see vignette(\"IC-precision\", package = \"point\").","code":""},{"path":"https://martinschobben.github.io/point/reference/stat_X.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyse raw ion count data — stat_X","text":"","code":"# Use point_example() to access the examples bundled with this package  # raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), meta = TRUE)  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # Single ion descriptive an predictive statistics for all measured ions stat_X(tb_pr, file.nm) #> # A tibble: 21 × 12 #>    file.nm         species.nm n_t.nm tot_N.pr M_Xt.pr S_Xt.pr RS_Xt.pr SeM_Xt.pr #>    <chr>           <chr>       <int>    <dbl>   <dbl>   <dbl>    <dbl>     <dbl> #>  1 2018-01-19-GLE… 12C          3900 41718475  3.06e4 2738.       8.94   43.8    #>  2 2018-01-19-GLE… 12C13C       3900    15254  1.12e1    9.17    81.9     0.147  #>  3 2018-01-19-GLE… 12C14N       3900   511093  3.75e2  220.      58.7     3.53   #>  4 2018-01-19-GLE… 12C2         3900   686187  5.04e2  341.      67.7     5.46   #>  5 2018-01-19-GLE… 13C          3900   458139  3.36e2   42.5     12.6     0.680  #>  6 2018-01-19-GLE… 13C14N       3900     9158  6.72e0    5.63    83.8     0.0902 #>  7 2018-01-19-GLE… 40Ca16O      3900 18082538  1.33e4 1856.      14.0    29.7    #>  8 2018-01-19-GLE… 12C          3900 72956119  5.35e4 4073.       7.61   65.2    #>  9 2018-01-19-GLE… 12C13C       3900    10786  7.92e0    7.48    94.4     0.120  #> 10 2018-01-19-GLE… 12C14N       3900   362709  2.66e2  114.      42.9     1.83   #> # … with 11 more rows, and 4 more variables: hat_S_N.pr <dbl>, #> #   hat_RS_N.pr <dbl>, hat_SeM_N.pr <dbl>, chi2_N.pr <dbl>  # Descriptive an predictive statistics for 13C/12C ratios stat_R(tb_pr, \"13C\", \"12C\", file.nm, .zero = TRUE) #> # A tibble: 3 × 13 #>   file.nm       n_R_t.nm M_R_Xt.pr S_R_Xt.pr RS_R_Xt.pr SeM_R_Xt.pr RSeM_R_Xt.pr #>   <chr>            <int>     <dbl>     <dbl>      <dbl>       <dbl>        <dbl> #> 1 2018-01-19-G…     3900    0.0110  0.00102        93.0   0.0000163         1.49 #> 2 2018-01-19-G…     3900    0.0110  0.000779       70.8   0.0000125         1.13 #> 3 2018-01-19-G…     3900    0.0110  0.000733       66.5   0.0000117         1.06 #> # … with 6 more variables: hat_S_R_N.pr <dbl>, hat_RS_R_N.pr <dbl>, #> #   hat_SeM_R_N.pr <dbl>, hat_RSeM_R_N.pr <dbl>, chi2_R_N.pr <dbl>, #> #   ratio.nm <chr>  # Descriptive an predictive statistics for 13C/12C ratios (external) stat_R(tb_pr, \"13C\", \"12C\", sample.nm, file.nm, .nest = file.nm,        .zero = TRUE) #> # A tibble: 1 × 13 #>   sample.nm        n_R_t.nm M_R_M_Xt.pr S_R_M_Xt.pr RS_R_M_Xt.pr SeM_R_M_Xt.pr #>   <chr>               <int>       <dbl>       <dbl>        <dbl>         <dbl> #> 1 Belemnite,Indium        3      0.0110   0.0000203         1.85     0.0000117 #> # … with 7 more variables: RSeM_R_M_Xt.pr <dbl>, hat_S_R_tot_N.pr <dbl>, #> #   hat_RS_R_tot_N.pr <dbl>, hat_SeM_R_tot_N.pr <dbl>, #> #   hat_RSeM_R_tot_N.pr <dbl>, chi2_R_tot_N.pr <dbl>, ratio.nm <chr>"},{"path":"https://martinschobben.github.io/point/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way. enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions). simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[. Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround. Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually : Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://martinschobben.github.io/point/reference/twodens.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","title":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","text":"twodens function 2D density calculations one two components","code":""},{"path":"https://martinschobben.github.io/point/reference/twodens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","text":"","code":"twodens(.IC, .x, .y, ..., .flag)"},{"path":"https://martinschobben.github.io/point/reference/twodens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","text":".IC tibble containing ion count data. .x variable plotted x-axis. .y variable plotted y-axis. ... Variables grouping. .flag Variable identifying two components data.","code":""},{"path":"https://martinschobben.github.io/point/reference/twodens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","text":"tibble::tibble() 2D density  x y named dens_z.","code":""},{"path":"https://martinschobben.github.io/point/reference/twodens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting highly dens data (inspired by\nThomas Mock) — twodens","text":"function inspired code blog-post Thomas Mock, deals -plotting dens data. just problem occurs dealing SIMS ion count data, usually entails thousands data-points (measurements) just one analysis. function provided can deal density one two components, latter case difference two 2D density matrices used show area plot maximum difference.","code":""},{"path":"https://martinschobben.github.io/point/reference/unfold.html","id":null,"dir":"Reference","previous_headings":"","what":"Access and hide IC metadata — unfold","title":"Access and hide IC metadata — unfold","text":"unfold() helps unpack metadata associated ion count data loaded read_IC(). fold() opposite hides metadata attribute tibble.","code":""},{"path":"https://martinschobben.github.io/point/reference/unfold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access and hide IC metadata — unfold","text":"","code":"unfold(df, type = \"metadata\", merge = TRUE)  fold(df, type, meta = NULL)"},{"path":"https://martinschobben.github.io/point/reference/unfold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access and hide IC metadata — unfold","text":"df tibble containing ion count data along point point- workflow type character string identifying metadata (default: \"metadata\") merge Logical dictating whether metadata joined tibble returned separate file. meta Additional tibble containing metadata storage along main IC data.","code":""},{"path":"https://martinschobben.github.io/point/reference/unfold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access and hide IC metadata — unfold","text":"tibble metadata attribute, columns seperate tibble.","code":""},{"path":"https://martinschobben.github.io/point/reference/unfold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access and hide IC metadata — unfold","text":"","code":"tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"), hide = TRUE)  # Unfold metadata unfold(tb_rw, merge = FALSE) #> # A tibble: 81,900 × 8 #>    file.nm                 t.nm species.nm num.mt bfield.mt rad.mt mass.mt tc.mt #>    <chr>                  <dbl> <chr>       <int> <chr>     <chr>  <chr>   <dbl> #>  1 2018-01-19-GLENDON_1_1  0.54 12C             1 1435.746  310.6… 12.000…  191. #>  2 2018-01-19-GLENDON_1_1  1.08 12C             1 1435.746  310.6… 12.000…  191. #>  3 2018-01-19-GLENDON_1_1  1.62 12C             1 1435.746  310.6… 12.000…  191. #>  4 2018-01-19-GLENDON_1_1  2.16 12C             1 1435.746  310.6… 12.000…  191. #>  5 2018-01-19-GLENDON_1_1  2.7  12C             1 1435.746  310.6… 12.000…  191. #>  6 2018-01-19-GLENDON_1_1  3.24 12C             1 1435.746  310.6… 12.000…  191. #>  7 2018-01-19-GLENDON_1_1  3.78 12C             1 1435.746  310.6… 12.000…  191. #>  8 2018-01-19-GLENDON_1_1  4.32 12C             1 1435.746  310.6… 12.000…  191. #>  9 2018-01-19-GLENDON_1_1  4.86 12C             1 1435.746  310.6… 12.000…  191. #> 10 2018-01-19-GLENDON_1_1  5.4  12C             1 1435.746  310.6… 12.000…  191. #> # … with 81,890 more rows"},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove analytical runs with zero counts — zeroCt","title":"Remove analytical runs with zero counts — zeroCt","text":"zeroCt removes analytical runs isotope ratios contain zero counts.","code":""},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove analytical runs with zero counts — zeroCt","text":"","code":"zeroCt(.IC, .ion1, .ion2, ..., .N = NULL, .species = NULL, .warn = TRUE)"},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove analytical runs with zero counts — zeroCt","text":".IC tibble containing processed ion count data. .ion1 character string constituting rare isotope (\"13C\"). .ion2 character string constituting common isotope (\"12C\"). ... Variables grouping. .N variable constituting ion counts. .species variable constituting species analysed. .warn logical indicating whether produce warning.","code":""},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove analytical runs with zero counts — zeroCt","text":"tibble containing single ion count dataset specified ion ratio. grouping variable specifies level original dataset subsetted.","code":""},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove analytical runs with zero counts — zeroCt","text":"functions removes analytical runs zero counts calculating isotope ratios.","code":""},{"path":"https://martinschobben.github.io/point/reference/zeroCt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove analytical runs with zero counts — zeroCt","text":"","code":"# Use point_example() to access the examples bundled with this package  # raw data containing 13C and 12C counts on carbonate tb_rw <- read_IC(point_example(\"2018-01-19-GLENDON\"))  # Processing raw ion count data tb_pr <- cor_IC(tb_rw)  # Remove analyses with zero counts tb_pr <- zeroCt(tb_pr, \"13C\", \"12C\", file.nm)"}]
